[{"path":"https://www.spsanderson.com/healthyR.ai/articles/auto-kmeans.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Auto K-Means with healthyR.ai","text":"Many times project want perform sort clustering given set data. can accomplished many different ways. vignette showcase can take data set prepared, say like internal iris file process healthyR.ai function hai_kmeans_automl(). First lets take look data . can see data already prepared ready go. factor column denotes species row data columns already numeric. Now rest fairly simple straight forward. Let’s use hai_kmeans_automl() function create list output comes want use Species column predictor based upon features presented.","code":"df_tbl <- iris  glimpse(df_tbl) #> Rows: 150 #> Columns: 5 #> $ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.… #> $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.… #> $ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.… #> $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.… #> $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/auto-kmeans.html","id":"use-the-function","dir":"Articles","previous_headings":"","what":"Use the function","title":"Auto K-Means with healthyR.ai","text":"Now column inputs function, can go ahead run . function gives lot output inside . discuss comes function.","code":"column_names <- names(iris) target_col <- \"Species\" predictor_cols <- setdiff(column_names, target_col) h2o.init()  output <- hai_kmeans_automl(   .data = df_tbl,   .predictors = predictor_cols,   .standardize = FALSE )  h2o.shutdown(prompt = FALSE)"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/auto-kmeans.html","id":"function-output","dir":"Articles","previous_headings":"","what":"Function Output","title":"Auto K-Means with healthyR.ai","text":"Lets take look structure output object. list lists four main components. following: data auto_kmeans_obj model_id (h2o model id) scree_plt (ggplot2 object) Lets explor items.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/articles/auto-kmeans.html","id":"data-1","dir":"Articles","previous_headings":"Function Output","what":"Data","title":"Auto K-Means with healthyR.ai","text":"Inside data list several sections. can view access simply. find outputs labeled simple understand manner.","code":"output$data"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/auto-kmeans.html","id":"auto-ml-object","dir":"Articles","previous_headings":"Function Output","what":"Auto-ML Object","title":"Auto K-Means with healthyR.ai","text":"Now auto-ml object .","code":"output$auto_kmeans_obj"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/auto-kmeans.html","id":"the-best-model","dir":"Articles","previous_headings":"Function Output","what":"The Best Model","title":"Auto K-Means with healthyR.ai","text":"also output best model saved .","code":"output$model_id"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/auto-kmeans.html","id":"scree-plot","dir":"Articles","previous_headings":"Function Output","what":"Scree Plot","title":"Auto K-Means with healthyR.ai","text":"also ggplot2 scree plot generated, helps us understand many clusters data resulting minimizing within sum squares errors.","code":"print(output$scree_plt)"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"libraries","dir":"Articles","previous_headings":"","what":"Libraries","title":"Getting Started with healthyR.ai","text":"","code":"library(timetk) library(dplyr) library(purrr) library(healthyR.data) library(rsample) library(recipes) library(ggplot2) library(plotly)"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Getting Started with healthyR.ai","text":"Now libraries can go ahead get data set ready.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"data-set","dir":"Articles","previous_headings":"Data","what":"Data Set","title":"Getting Started with healthyR.ai","text":"data set simple useful pca analysis since one predictor, time. order facilitate use function example, create splits object recipe object.","code":"data_tbl <- healthyR_data %>%     select(visit_end_date_time) %>%     summarise_by_time(         .date_var = visit_end_date_time,         .by       = \"month\",         value     = n()     ) %>%     set_names(\"date_col\",\"value\") %>%     filter_by_time(         .date_var = date_col,         .start_date = \"2013\",         .end_date = \"2020\"     ) %>%     mutate(date_col = as.Date(date_col))  head(data_tbl) #> # A tibble: 6 × 2 #>   date_col   value #>   <date>     <int> #> 1 2013-01-01  2082 #> 2 2013-02-01  1719 #> 3 2013-03-01  1796 #> 4 2013-04-01  1865 #> 5 2013-05-01  2028 #> 6 2013-06-01  1813"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"splits","dir":"Articles","previous_headings":"Data","what":"Splits","title":"Getting Started with healthyR.ai","text":"","code":"splits <- initial_split(data = data_tbl, prop = 0.8)  splits #> <Training/Testing/Total> #> <76/19/95>  head(training(splits)) #> # A tibble: 6 × 2 #>   date_col   value #>   <date>     <int> #> 1 2016-05-01  1587 #> 2 2017-05-01  1647 #> 3 2018-09-01  1343 #> 4 2018-11-01  1550 #> 5 2019-08-01  1416 #> 6 2019-03-01  1560"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"initial-recipe","dir":"Articles","previous_headings":"Data","what":"Initial Recipe","title":"Getting Started with healthyR.ai","text":"Now initial recipe can use pca_your_recipe() function.","code":"rec_obj <- recipe(value ~ ., training(splits)) %>%     step_timeseries_signature(date_col) %>%     step_rm(matches(\"(iso$)|(xts$)|(hour)|(min)|(sec)|(am.pm)\"))  rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Operations #> • Timeseries signature features from: date_col #> • Variables removed: matches(\"(iso$)|(xts$)|(hour)|(min)|(sec)|(am.pm)\")  get_juiced_data(rec_obj) %>% glimpse() #> Rows: 76 #> Columns: 20 #> $ date_col           <date> 2016-05-01, 2017-05-01, 2018-09-01, 2018-11-01, 20… #> $ value              <int> 1587, 1647, 1343, 1550, 1416, 1560, 1513, 1635, 147… #> $ date_col_index.num <dbl> 1462060800, 1493596800, 1535760000, 1541030400, 156… #> $ date_col_year      <int> 2016, 2017, 2018, 2018, 2019, 2019, 2016, 2017, 201… #> $ date_col_half      <int> 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, … #> $ date_col_quarter   <int> 2, 2, 3, 4, 3, 1, 4, 1, 1, 3, 1, 1, 3, 3, 1, 4, 2, … #> $ date_col_month     <int> 5, 5, 9, 11, 8, 3, 11, 1, 2, 8, 2, 1, 8, 9, 2, 10, … #> $ date_col_month.lbl <ord> May, May, September, November, August, March, Novem… #> $ date_col_day       <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ date_col_wday      <int> 1, 2, 7, 5, 5, 6, 3, 1, 6, 6, 7, 5, 3, 1, 6, 3, 4, … #> $ date_col_wday.lbl  <ord> Sunday, Monday, Saturday, Thursday, Thursday, Frida… #> $ date_col_mday      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ date_col_qday      <int> 31, 31, 63, 32, 32, 60, 32, 1, 32, 32, 32, 1, 32, 6… #> $ date_col_yday      <int> 122, 121, 244, 305, 213, 60, 306, 1, 32, 213, 32, 1… #> $ date_col_mweek     <int> 5, 6, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, … #> $ date_col_week      <int> 18, 18, 35, 44, 31, 9, 44, 1, 5, 31, 5, 1, 31, 35, … #> $ date_col_week2     <int> 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, … #> $ date_col_week3     <int> 0, 0, 2, 2, 1, 0, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, … #> $ date_col_week4     <int> 2, 2, 3, 0, 3, 1, 0, 1, 1, 3, 1, 1, 3, 3, 1, 0, 2, … #> $ date_col_mday7     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … pca_list <- pca_your_recipe(   .recipe_object = rec_obj,   .data          = data_tbl,   .threshold     = 0.8,   .top_n         = 5 ) #> Warning: Column(s) have zero variance so scaling cannot be used: #> `date_col_day`, `date_col_mday` and `date_col_mday7`. Consider using #> `step_zv()` to remove those columns before normalizing"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"inspect-pca-output","dir":"Articles","previous_headings":"","what":"Inspect PCA Output","title":"Getting Started with healthyR.ai","text":"function returns list object insvisible must assign output variable, can access items list usual manner. following items included output function: pca_transform - pca recipe. variable_loadings variable_variance pca_estimates pca_juiced_estimates pca_baked_data pca_variance_df pca_variance_scree_plt pca_rotation_df Lets start going list items.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"pca-transform","dir":"Articles","previous_headings":"Inspect PCA Output","what":"PCA Transform","title":"Getting Started with healthyR.ai","text":"portion want output variable recipe object use line work.","code":"pca_rec_obj <- pca_list$pca_transform  pca_rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Operations #> • Timeseries signature features from: date_col #> • Variables removed: matches(\"(iso$)|(xts$)|(hour)|(min)|(sec)|(am.pm)\") #> • Centering for: recipes::all_numeric() #> • Scaling for: recipes::all_numeric() #> • Sparse, unbalanced variable filter on: recipes::all_numeric() #> • PCA extraction with: recipes::all_numeric_predictors()"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"variable-loadings","dir":"Articles","previous_headings":"Inspect PCA Output","what":"Variable Loadings","title":"Getting Started with healthyR.ai","text":"","code":"pca_list$variable_loadings #> # A tibble: 169 × 4 #>    terms                 value component id        #>    <chr>                 <dbl> <chr>     <chr>     #>  1 date_col_index.num  0.0193  PC1       pca_vaKjE #>  2 date_col_year      -0.0386  PC1       pca_vaKjE #>  3 date_col_half       0.388   PC1       pca_vaKjE #>  4 date_col_quarter    0.431   PC1       pca_vaKjE #>  5 date_col_month      0.433   PC1       pca_vaKjE #>  6 date_col_wday      -0.0351  PC1       pca_vaKjE #>  7 date_col_qday       0.0467  PC1       pca_vaKjE #>  8 date_col_yday       0.433   PC1       pca_vaKjE #>  9 date_col_mweek      0.00422 PC1       pca_vaKjE #> 10 date_col_week       0.433   PC1       pca_vaKjE #> # ℹ 159 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"variable-variance","dir":"Articles","previous_headings":"Inspect PCA Output","what":"Variable Variance","title":"Getting Started with healthyR.ai","text":"","code":"pca_list$variable_variance #> # A tibble: 52 × 4 #>    terms       value component id        #>    <chr>       <dbl>     <int> <chr>     #>  1 variance 5.23             1 pca_vaKjE #>  2 variance 2.00             2 pca_vaKjE #>  3 variance 1.52             3 pca_vaKjE #>  4 variance 1.30             4 pca_vaKjE #>  5 variance 1.14             5 pca_vaKjE #>  6 variance 0.686            6 pca_vaKjE #>  7 variance 0.593            7 pca_vaKjE #>  8 variance 0.465            8 pca_vaKjE #>  9 variance 0.0521           9 pca_vaKjE #> 10 variance 0.000211        10 pca_vaKjE #> # ℹ 42 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"pca-estimates","dir":"Articles","previous_headings":"Inspect PCA Output","what":"PCA Estimates","title":"Getting Started with healthyR.ai","text":"","code":"pca_list$pca_estimates #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Training information #> Training data contained 76 data points and no incomplete rows. #>  #> ── Operations #> • Timeseries signature features from: date_col | Trained #> • Variables removed: date_col_year.iso, date_col_month.xts, ... | Trained #> • Centering for: value, date_col_index.num, date_col_year, ... | Trained #> • Scaling for: value, date_col_index.num, date_col_year, ... | Trained #> • Sparse, unbalanced variable filter removed: date_col_day, ... | Trained #> • PCA extraction with: date_col_index.num, date_col_year, ... | Trained"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"jucied-and-baked-data","dir":"Articles","previous_headings":"Inspect PCA Output","what":"Jucied and Baked Data","title":"Getting Started with healthyR.ai","text":"","code":"pca_list$pca_juiced_estimates %>% glimpse() #> Rows: 76 #> Columns: 9 #> $ date_col           <date> 2016-05-01, 2017-05-01, 2018-09-01, 2018-11-01, 20… #> $ value              <dbl> 0.1329352773, 0.3982240583, -0.9459057653, -0.03065… #> $ date_col_month.lbl <ord> May, May, September, November, August, March, Novem… #> $ date_col_wday.lbl  <ord> Sunday, Monday, Saturday, Thursday, Thursday, Frida… #> $ PC1                <dbl> -1.0267706, -1.0469010, 0.9807093, 2.9354197, 0.524… #> $ PC2                <dbl> -0.36928356, 0.48921097, 1.07346258, 1.00952193, 1.… #> $ PC3                <dbl> -0.49077479, 0.54757044, 0.04788856, -0.69761176, 0… #> $ PC4                <dbl> -0.41037035, -0.56381837, 2.75026214, -0.52731285, … #> $ PC5                <dbl> -1.8430269, -2.1771819, 1.5951432, 1.0780155, 0.802…  pca_list$pca_baked_data %>% glimpse() #> Rows: 95 #> Columns: 9 #> $ date_col           <date> 2013-01-01, 2013-02-01, 2013-03-01, 2013-04-01, 20… #> $ value              <dbl> 2.3215677, 0.7165706, 1.0570245, 1.3621066, 2.08280… #> $ date_col_month.lbl <ord> January, February, March, April, May, June, July, A… #> $ date_col_wday.lbl  <ord> Tuesday, Friday, Friday, Monday, Wednesday, Saturda… #> $ PC1                <dbl> -3.3206464, -2.8989505, -2.6214743, -1.8620358, -1.… #> $ PC2                <dbl> -2.118685, -2.443313, -2.494372, -1.984653, -2.3584… #> $ PC3                <dbl> 1.68932549, 0.02008400, -1.33699696, 1.87290199, -0… #> $ PC4                <dbl> -1.37846842, 0.06197514, 0.89992496, -1.29970361, -… #> $ PC5                <dbl> -0.44764626, 1.29598389, -0.62715237, -0.76917566, …"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"roatation-data","dir":"Articles","previous_headings":"Inspect PCA Output","what":"Roatation Data","title":"Getting Started with healthyR.ai","text":"","code":"pca_list$pca_rotation_df %>% glimpse() #> Rows: 13 #> Columns: 13 #> $ PC1  <dbl> 0.019315047, -0.038563997, 0.387552478, 0.431449781, 0.433168437,… #> $ PC2  <dbl> 0.699276384, 0.697213171, 0.038818102, 0.011923053, 0.005377266, … #> $ PC3  <dbl> -0.10534865, -0.10336850, 0.18724238, 0.03805013, -0.01435840, -0… #> $ PC4  <dbl> 0.0005850596, -0.0119762590, 0.1106993688, -0.0530122832, 0.09423… #> $ PC5  <dbl> 0.02213747, 0.02654742, 0.20622901, 0.05239999, -0.03537168, 0.59… #> $ PC6  <dbl> 0.022912405, 0.022989574, -0.146573929, -0.122281043, -0.00514882… #> $ PC7  <dbl> 0.009393494, 0.014285815, 0.164388048, 0.018529703, -0.034957737,… #> $ PC8  <dbl> 0.00891792, 0.01608612, -0.24670371, -0.06456866, -0.05127006, 0.… #> $ PC9  <dbl> -0.019204403, 0.009966989, 0.805646910, -0.272060527, -0.21538705… #> $ PC10 <dbl> -0.0148882682, 0.0130633078, 0.0008932996, -0.2927032461, -0.3799… #> $ PC11 <dbl> -2.639123e-02, 2.695316e-02, -1.289940e-03, -2.866897e-02, 6.5501… #> $ PC12 <dbl> -3.380893e-03, 3.184078e-03, -3.504556e-03, -7.909521e-01, 4.2229… #> $ PC13 <dbl> -7.050245e-01, 7.063111e-01, 1.148276e-04, 3.347581e-02, 4.377297…"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"variance-and-scree-plot","dir":"Articles","previous_headings":"Inspect PCA Output","what":"Variance and Scree Plot","title":"Getting Started with healthyR.ai","text":"","code":"pca_list$pca_variance_df %>% glimpse() #> Rows: 13 #> Columns: 6 #> $ PC              <chr> \"PC1\", \"PC2\", \"PC3\", \"PC4\", \"PC5\", \"PC6\", \"PC7\", \"PC8\"… #> $ var_explained   <dbl> 4.026731e-01, 1.541863e-01, 1.170039e-01, 1.001223e-01… #> $ var_pct_txt     <chr> \"40.27%\", \"15.42%\", \"11.70%\", \"10.01%\", \"8.78%\", \"5.28… #> $ cum_var_pct     <dbl> 0.4026731, 0.5568594, 0.6738634, 0.7739857, 0.8618163,… #> $ cum_var_pct_txt <chr> \"40.27%\", \"55.69%\", \"67.39%\", \"77.40%\", \"86.18%\", \"91.… #> $ ou_threshold    <fct> Under, Under, Under, Under, Over, Over, Over, Over, Ov… pca_list$pca_variance_scree_plt"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/getting-started.html","id":"variable-loading-plots","dir":"Articles","previous_headings":"Inspect PCA Output","what":"Variable Loading Plots","title":"Getting Started with healthyR.ai","text":"","code":"pca_list$pca_loadings_plt pca_list$pca_top_n_loadings_plt"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/kmeans-umap.html","id":"information","dir":"Articles","previous_headings":"","what":"Information","title":"Clustering with K-Means and UMAP","text":"K-Means partition algorithm initially designed signal processing. goal partition n observations k clusters n k. unsupervised k-means algorithm loose relationship k-nearest neighbor classifier, popular supervised machine learning technique classification often confused k-means due name. Applying 1-nearest neighbor classifier cluster centers obtained k-means classifies new data existing clusters. aim vignette showcase use healthyR wrapper kmeans function wrapper plot uwot::umap projection function. go entire workflow getting data getting fina UMAP plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/articles/kmeans-umap.html","id":"generate-some-data","dir":"Articles","previous_headings":"","what":"Generate some data","title":"Clustering with K-Means and UMAP","text":"Now data need generate called user item table. use function hai_kmeans_user_item_tbl takes just arguments. purpose user item table aggregate normalize data users items. data generated going look clustering amongst service_lines (user) payer_grouping (item) columns. Lets now create user item table.","code":"library(healthyR.data) library(dplyr) library(broom) library(ggplot2)  data_tbl <- healthyR_data %>%     filter(ip_op_flag == \"I\") %>%     filter(payer_grouping != \"Medicare B\") %>%     filter(payer_grouping != \"?\") %>%     select(service_line, payer_grouping) %>%     mutate(record = 1) %>%     as_tibble()  data_tbl %>%   glimpse() #> Rows: 116,823 #> Columns: 3 #> $ service_line   <chr> \"Medical\", \"Schizophrenia\", \"Syncope\", \"Pneumonia\", \"Ch… #> $ payer_grouping <chr> \"Blue Cross\", \"Medicare A\", \"Medicare A\", \"Medicare A\",… #> $ record         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/kmeans-umap.html","id":"user-item-tibble","dir":"Articles","previous_headings":"","what":"User Item Tibble","title":"Clustering with K-Means and UMAP","text":"table aggregated item various users algorithm applied. Now data need find optimal k (clusters). need generate table data column k k apply k-means function data k return total within sum squares. convienent function called hai_kmeans_mapped_tbl takes sole argument output hai_kmeans_user_item_tbl. argument .centers default set 15.","code":"uit_tbl <- hai_kmeans_user_item_tbl(data_tbl, service_line, payer_grouping, record) uit_tbl #> # A tibble: 23 × 12 #>    service_line     `Blue Cross` Commercial Compensation `Exchange Plans`    HMO #>    <chr>                   <dbl>      <dbl>        <dbl>            <dbl>  <dbl> #>  1 Alcohol Abuse          0.0941    0.0321      0.000525          0.0116  0.0788 #>  2 Bariatric Surge…       0.317     0.0583      0                 0.0518  0.168  #>  3 CHF                    0.0295    0.00958     0.000518          0.00414 0.0205 #>  4 COPD                   0.0493    0.0228      0.000228          0.00548 0.0342 #>  5 CVA                    0.0647    0.0246      0.00107           0.0107  0.0524 #>  6 Carotid Endarte…       0.0845    0.0282      0                 0       0.0141 #>  7 Cellulitis             0.110     0.0339      0.0118            0.00847 0.0805 #>  8 Chest Pain             0.144     0.0391      0.00290           0.00543 0.112  #>  9 GI Hemorrhage          0.0542    0.0175      0.00125           0.00834 0.0480 #> 10 Joint Replaceme…       0.139     0.0179      0.0336            0.00673 0.0516 #> # ℹ 13 more rows #> # ℹ 6 more variables: Medicaid <dbl>, `Medicaid HMO` <dbl>, `Medicare A` <dbl>, #> #   `Medicare HMO` <dbl>, `No Fault` <dbl>, `Self Pay` <dbl>"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/kmeans-umap.html","id":"k-means-mapped-tibble","dir":"Articles","previous_headings":"","what":"K-Means Mapped Tibble","title":"Clustering with K-Means and UMAP","text":"see three columns, centers, k_means glance. k_means column k_means list object glance tibble returned broom::glance function. stated use tot.withinss decide become k, easy way visualize Scree Plot, also known elbow plot. done ploting x-axis centers y-axis tot.withinss.","code":"kmm_tbl <- hai_kmeans_mapped_tbl(uit_tbl) kmm_tbl #> # A tibble: 15 × 3 #>    centers k_means  glance           #>      <int> <list>   <list>           #>  1       1 <kmeans> <tibble [1 × 4]> #>  2       2 <kmeans> <tibble [1 × 4]> #>  3       3 <kmeans> <tibble [1 × 4]> #>  4       4 <kmeans> <tibble [1 × 4]> #>  5       5 <kmeans> <tibble [1 × 4]> #>  6       6 <kmeans> <tibble [1 × 4]> #>  7       7 <kmeans> <tibble [1 × 4]> #>  8       8 <kmeans> <tibble [1 × 4]> #>  9       9 <kmeans> <tibble [1 × 4]> #> 10      10 <kmeans> <tibble [1 × 4]> #> 11      11 <kmeans> <tibble [1 × 4]> #> 12      12 <kmeans> <tibble [1 × 4]> #> 13      13 <kmeans> <tibble [1 × 4]> #> 14      14 <kmeans> <tibble [1 × 4]> #> 15      15 <kmeans> <tibble [1 × 4]> kmm_tbl %>%   tidyr::unnest(glance) #> # A tibble: 15 × 6 #>    centers k_means  totss tot.withinss betweenss  iter #>      <int> <list>   <dbl>        <dbl>     <dbl> <int> #>  1       1 <kmeans>  1.41       1.41    1.33e-15     1 #>  2       2 <kmeans>  1.41       0.592   8.17e- 1     1 #>  3       3 <kmeans>  1.41       0.372   1.04e+ 0     2 #>  4       4 <kmeans>  1.41       0.276   1.13e+ 0     3 #>  5       5 <kmeans>  1.41       0.202   1.21e+ 0     2 #>  6       6 <kmeans>  1.41       0.159   1.25e+ 0     2 #>  7       7 <kmeans>  1.41       0.124   1.28e+ 0     3 #>  8       8 <kmeans>  1.41       0.0884  1.32e+ 0     2 #>  9       9 <kmeans>  1.41       0.0716  1.34e+ 0     2 #> 10      10 <kmeans>  1.41       0.0576  1.35e+ 0     2 #> 11      11 <kmeans>  1.41       0.0460  1.36e+ 0     2 #> 12      12 <kmeans>  1.41       0.0363  1.37e+ 0     2 #> 13      13 <kmeans>  1.41       0.0272  1.38e+ 0     2 #> 14      14 <kmeans>  1.41       0.0202  1.39e+ 0     2 #> 15      15 <kmeans>  1.41       0.0160  1.39e+ 0     2"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/kmeans-umap.html","id":"scree-plot-and-data","dir":"Articles","previous_headings":"","what":"Scree Plot and Data","title":"Clustering with K-Means and UMAP","text":"want see scree plot data creates plot can use another function hai_kmeans_scree_data_tbl. pieces information can decide upon value k, instance going use 3. Now can go ahead creating umap list object can take look great many things associated data.","code":"hai_kmeans_scree_plt(.data = kmm_tbl) hai_kmeans_scree_data_tbl(kmm_tbl) #> # A tibble: 15 × 2 #>    centers tot.withinss #>      <int>        <dbl> #>  1       1       1.41   #>  2       2       0.592  #>  3       3       0.372  #>  4       4       0.276  #>  5       5       0.202  #>  6       6       0.159  #>  7       7       0.124  #>  8       8       0.0884 #>  9       9       0.0716 #> 10      10       0.0576 #> 11      11       0.0460 #> 12      12       0.0363 #> 13      13       0.0272 #> 14      14       0.0202 #> 15      15       0.0160"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/kmeans-umap.html","id":"umap-list-object","dir":"Articles","previous_headings":"","what":"UMAP List Object","title":"Clustering with K-Means and UMAP","text":"Now lets go ahead create UMAP list object. Now created, lets take look item list. umap_list function returns list 5 items. umap_obj umap_results_tbl kmeans_obj kmeans_cluster_tbl umap_kmeans_cluster_results_tbl Since list object can now inspect kmeans_obj, first thing use hai_kmeans_tidy_tbl function inspect things.","code":"ump_lst <- hai_umap_list(.data = uit_tbl, kmm_tbl, 3) km_obj <- ump_lst$kmeans_obj hai_kmeans_tidy_tbl(.kmeans_obj = km_obj, .data = uit_tbl, .tidy_type = \"glance\") #> # A tibble: 1 × 4 #>   totss tot.withinss betweenss  iter #>   <dbl>        <dbl>     <dbl> <int> #> 1  1.41        0.372      1.04     2 hai_kmeans_tidy_tbl(km_obj, uit_tbl, \"augment\") #> # A tibble: 23 × 2 #>    service_line                  cluster #>    <chr>                         <fct>   #>  1 Alcohol Abuse                 1       #>  2 Bariatric Surgery For Obesity 1       #>  3 CHF                           3       #>  4 COPD                          3       #>  5 CVA                           3       #>  6 Carotid Endarterectomy        3       #>  7 Cellulitis                    2       #>  8 Chest Pain                    2       #>  9 GI Hemorrhage                 3       #> 10 Joint Replacement             3       #> # ℹ 13 more rows hai_kmeans_tidy_tbl(km_obj, uit_tbl, \"tidy\") #> # A tibble: 3 × 14 #>   `Blue Cross` Commercial Compensation `Exchange Plans`    HMO Medicaid #>          <dbl>      <dbl>        <dbl>            <dbl>  <dbl>    <dbl> #> 1       0.150      0.0368     0.000307          0.0207  0.163    0.131  #> 2       0.117      0.0314     0.0102            0.0139  0.0982   0.0856 #> 3       0.0784     0.0218     0.00432           0.00620 0.0449   0.0368 #> # ℹ 8 more variables: `Medicaid HMO` <dbl>, `Medicare A` <dbl>, #> #   `Medicare HMO` <dbl>, `No Fault` <dbl>, `Self Pay` <dbl>, size <int>, #> #   withinss <dbl>, cluster <fct>"},{"path":"https://www.spsanderson.com/healthyR.ai/articles/kmeans-umap.html","id":"umap-plot","dir":"Articles","previous_headings":"","what":"UMAP Plot","title":"Clustering with K-Means and UMAP","text":"Now data can visualize clusters colored cluster number.","code":"hai_umap_plot(.data = ump_lst, .point_size = 3, TRUE)"},{"path":"https://www.spsanderson.com/healthyR.ai/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steven Sanderson. Author, maintainer, copyright holder.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sanderson S (2023). healthyR.ai: Machine Learning AI Modeling Companion 'healthyR'. R package version 0.0.13.9000, https://github.com/spsanderson/healthyR.ai.","code":"@Manual{,   title = {healthyR.ai: The Machine Learning and AI Modeling Companion to 'healthyR'},   author = {Steven Sanderson},   year = {2023},   note = {R package version 0.0.13.9000},   url = {https://github.com/spsanderson/healthyR.ai}, }"},{"path":"https://www.spsanderson.com/healthyR.ai/index.html","id":"healthyrai-","dir":"","previous_headings":"","what":"The Machine Learning and AI Modeling Companion to healthyR","title":"The Machine Learning and AI Modeling Companion to healthyR","text":"goal healthyR.ai create verb framework allows easy exploration, transformation modeling data.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The Machine Learning and AI Modeling Companion to healthyR","text":"can install released version healthyR.ai CRAN : development version GitHub :","code":"install.packages(\"healthyR.ai\") # install.packages(\"devtools\") devtools::install_github(\"spsanderson/healthyR.ai\")"},{"path":"https://www.spsanderson.com/healthyR.ai/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"The Machine Learning and AI Modeling Companion to healthyR","text":"basic example shows solve common problem:","code":"library(healthyR.ai) #>  #> == Welcome to healthyR.ai =========================================================================== #> If you find this package useful, please leave a star:  #>    https://github.com/spsanderson/healthyR.ai' #>  #> If you encounter a bug or want to request an enhancement please file an issue at: #>    https://github.com/spsanderson/healthyR.ai/issues #>  #> Thank you for using healthyR.ai library(ggplot2)  data_tbl <- tibble::tibble(         day = sample(c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"),                      100, TRUE),         person = sample(c(\"Tom\", \"Jane\", \"Alex\"), 100, TRUE),         count = rbinom(100, 20, ifelse(day == \"Friday\", .5, .2)),         date = Sys.Date() - sample.int(100))  my_chart <- hai_control_chart(data_tbl, count, date) my_chart +     ylab(\"Number of Adverse Events\") +     scale_x_date(name = \"Week of ... \", date_breaks = \"week\") +     theme(axis.text.x = element_text(angle = -90, vjust = 0.5, hjust=1))"},{"path":"https://www.spsanderson.com/healthyR.ai/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Steven P. Sanderson II, MPH Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/color_blind.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide Colorblind Compliant Colors — color_blind","title":"Provide Colorblind Compliant Colors — color_blind","text":"8 Hex RGB color definitions suitable charts colorblind people.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/color_blind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide Colorblind Compliant Colors — color_blind","text":"","code":"color_blind()"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/color_blind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide Colorblind Compliant Colors — color_blind","text":"vector 8 Hex RGB definitions.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/color_blind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provide Colorblind Compliant Colors — color_blind","text":"function used others order help render plots color blind.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/color_blind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Provide Colorblind Compliant Colors — color_blind","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/color_blind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide Colorblind Compliant Colors — color_blind","text":"","code":"color_blind() #> [1] \"#000000\" \"#E69F00\" \"#56B4E9\" \"#009E73\" \"#F0E442\" \"#0072B2\" \"#D55E00\" #> [8] \"#CC79A7\""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/get_juiced_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Juiced Data — get_juiced_data","title":"Get the Juiced Data — get_juiced_data","text":"simple function get juiced data recipe.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/get_juiced_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Juiced Data — get_juiced_data","text":"","code":"get_juiced_data(.recipe_object)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/get_juiced_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Juiced Data — get_juiced_data","text":".recipe_object recipe object want pass.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/get_juiced_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Juiced Data — get_juiced_data","text":"tibble prepped juiced data given recipe","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/get_juiced_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the Juiced Data — get_juiced_data","text":"Instead typing something like: recipe_object %>% prep() %>% juice() %>% glimpse()","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/get_juiced_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the Juiced Data — get_juiced_data","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/get_juiced_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Juiced Data — get_juiced_data","text":"","code":"suppressPackageStartupMessages(library(timetk)) suppressPackageStartupMessages(library(dplyr)) #> Warning: package 'dplyr' was built under R version 4.2.3 suppressPackageStartupMessages(library(purrr)) suppressPackageStartupMessages(library(healthyR.data)) suppressPackageStartupMessages(library(rsample)) #> Warning: package 'rsample' was built under R version 4.2.2 suppressPackageStartupMessages(library(recipes)) #> Warning: package 'recipes' was built under R version 4.2.3  data_tbl <- healthyR_data %>%   select(visit_end_date_time) %>%   summarise_by_time(     .date_var = visit_end_date_time,     .by       = \"month\",     value     = n()   ) %>%   set_names(\"date_col\", \"value\") %>%   filter_by_time(     .date_var = date_col,     .start_date = \"2013\",     .end_date = \"2020\"   )  splits <- initial_split(data = data_tbl, prop = 0.8)  rec_obj <- recipe(value ~ ., training(splits))  get_juiced_data(rec_obj) #> # A tibble: 76 × 2 #>    date_col            value #>    <dttm>              <int> #>  1 2020-02-01 00:00:00  1363 #>  2 2016-02-01 00:00:00  1474 #>  3 2018-03-01 00:00:00  1618 #>  4 2015-08-01 00:00:00  1609 #>  5 2015-07-01 00:00:00  1751 #>  6 2016-11-01 00:00:00  1513 #>  7 2013-03-01 00:00:00  1796 #>  8 2017-10-01 00:00:00  1614 #>  9 2013-05-01 00:00:00  2028 #> 10 2017-06-01 00:00:00  1661 #> # ℹ 66 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_c50.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_c50","title":"Boilerplate Workflow — hai_auto_c50","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_c50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_c50","text":"","code":"hai_auto_c50(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"f_meas\",   .model_type = \"classification\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_c50.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_c50","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_c50_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"f_meas\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default classification, can also regression.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_c50.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_c50","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_c50.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_c50","text":"uses parsnip::boost_tree() engine set C5.0","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_c50.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_c50","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_c50.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_c50","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_c50_data_prepper(data, Species ~ .)  auto_c50 <- hai_auto_c50(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\",   .model_type = \"classification\" )  auto_c50$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_cubist.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_cubist","title":"Boilerplate Workflow — hai_auto_cubist","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_cubist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_cubist","text":"","code":"hai_auto_cubist(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"rmse\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_cubist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_cubist","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_cubist_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"rmse\". .model_type can use Cubist regression use hai_default_regression_metric_set() get available metrics. .model_type parameter omitted function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_cubist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_cubist","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_cubist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_cubist","text":"uses parsnip::cubist_rules() engine set cubist","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_cubist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_cubist","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_cubist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_cubist","text":"","code":"if (FALSE) { data <- mtcars  rec_obj <- hai_cubist_data_prepper(data, mpg ~ .)  auto_cube <- hai_auto_cubist(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"rmse\" )  auto_cube$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_earth.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_earth","title":"Boilerplate Workflow — hai_auto_earth","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_earth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_earth","text":"","code":"hai_auto_earth(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"f_meas\",   .model_type = \"classification\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_earth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_earth","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_earth_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"f_meas\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default classification, can also regression.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_earth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_earth","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_earth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_earth","text":"uses parsnip::mars() engine set earth","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_earth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_earth","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_earth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_earth","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_earth_data_prepper(data, Species ~ .)  auto_earth <- hai_auto_earth(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\",   .model_type = \"classification\" )  auto_earth$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_glmnet","title":"Boilerplate Workflow — hai_auto_glmnet","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_glmnet","text":"","code":"hai_auto_glmnet(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"f_meas\",   .model_type = \"classification\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_glmnet","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_glmnet_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"f_meas\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default classification, can also regression.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_glmnet","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_glmnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_glmnet","text":"uses parsnip::multinom_reg() engine set glmnet","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_glmnet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_glmnet","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_glmnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_glmnet","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_glmnet_data_prepper(data, Species ~ .)  auto_glm <- hai_auto_glmnet(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\",   .model_type = \"classification\" )  auto_glm$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_knn","title":"Boilerplate Workflow — hai_auto_knn","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_knn","text":"","code":"hai_auto_knn(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"rmse\",   .model_type = \"regression\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_knn","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_knn_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"rmse\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default regression, can also classification.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_knn","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_knn","text":"uses parsnip::nearest_neighbor() engine set kknn","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_knn","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_knn","text":"","code":"if (FALSE) { library(dplyr)  data <- iris  rec_obj <- hai_knn_data_prepper(data, Species ~ .)  auto_knn <- hai_auto_knn(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\",   .model_type = \"classification\" )  auto_knn$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_ranger.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_ranger","title":"Boilerplate Workflow — hai_auto_ranger","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_ranger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_ranger","text":"","code":"hai_auto_ranger(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"f_meas\",   .model_type = \"classification\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_ranger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_ranger","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_ranger_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"f_meas\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default classification, can also regression.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_ranger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_ranger","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_ranger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_ranger","text":"uses parsnip::rand_forest() engine set kernlab","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_ranger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_ranger","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_ranger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_ranger","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_ranger_data_prepper(data, Species ~ .)  auto_ranger <- hai_auto_ranger(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\" )  auto_ranger$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_svm_poly","title":"Boilerplate Workflow — hai_auto_svm_poly","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_svm_poly","text":"","code":"hai_auto_svm_poly(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"f_meas\",   .model_type = \"classification\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_svm_poly","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_svm_poly_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"f_meas\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default classification, can also regression.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_svm_poly","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_poly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_svm_poly","text":"uses parsnip::svm_poly() engine set kernlab","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_poly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_svm_poly","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_svm_poly","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_svm_poly_data_prepper(data, Species ~ .)  auto_svm_poly <- hai_auto_svm_poly(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\" )  auto_svm_poly$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_rbf.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_svm_rbf","title":"Boilerplate Workflow — hai_auto_svm_rbf","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_rbf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_svm_rbf","text":"","code":"hai_auto_svm_rbf(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"f_meas\",   .model_type = \"classification\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_rbf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_svm_rbf","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_svm_rbf_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"f_meas\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default classification, can also regression.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_rbf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_svm_rbf","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_rbf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_svm_rbf","text":"uses parsnip::svm_rbf() engine set kernlab","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_rbf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_svm_rbf","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_svm_rbf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_svm_rbf","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_svm_rbf_data_prepper(data, Species ~ .)  auto_rbf <- hai_auto_svm_rbf(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\" )  auto_rbf$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","title":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","text":"function extract metrics hai_auto_ boilerplate functions.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","text":"","code":"hai_auto_wflw_metrics(.data)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","text":".data output hai_auto_ boilerplate function entirety.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","text":"tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","text":"function extract metrics hai_auto_ boilerplate functions. function looks specific attribute hai_auto_ functions extract tuned_results tuning process indeed tuned.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect Metrics from Boilerplat Workflows — hai_auto_wflw_metrics","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_knn_data_prepper(data, Species ~ .)  auto_knn <- hai_auto_knn(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\",   .model_type = \"classification\",   .grid_size = 2,   .num_cores = 4 )  hai_auto_wflw_metrics(auto_knn) }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html","id":null,"dir":"Reference","previous_headings":"","what":"Boilerplate Workflow — hai_auto_xgboost","title":"Boilerplate Workflow — hai_auto_xgboost","text":"boilerplate function create automatically following: recipe model specification workflow tuned model (grid ect)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boilerplate Workflow — hai_auto_xgboost","text":"","code":"hai_auto_xgboost(   .data,   .rec_obj,   .splits_obj = NULL,   .rsamp_obj = NULL,   .tune = TRUE,   .grid_size = 10,   .num_cores = 1,   .best_metric = \"f_meas\",   .model_type = \"classification\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boilerplate Workflow — hai_auto_xgboost","text":".data data passed function. time-series object. .rec_obj recipe object want use. can use hai_xgboost_data_prepper() automatic recipe_object. .splits_obj NULL default, NULL one created. .rsamp_obj NULL default, NULL one created. default creating rsample::mc_cv() object. .tune Default TRUE, create tuning grid tuned workflow .grid_size Default 10 .num_cores Default 1 .best_metric Default \"f_meas\". can choose metric depending model_type used. regression see hai_default_regression_metric_set(), classification see hai_default_classification_metric_set(). .model_type Default classification, can also regression.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boilerplate Workflow — hai_auto_xgboost","text":"list","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boilerplate Workflow — hai_auto_xgboost","text":"uses parsnip::boost_tree() engine set xgboost","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boilerplate Workflow — hai_auto_xgboost","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boilerplate Workflow — hai_auto_xgboost","text":"","code":"if (FALSE) { data <- iris  rec_obj <- hai_xgboost_data_prepper(data, Species ~ .)  auto_xgb <- hai_auto_xgboost(   .data = data,   .rec_obj = rec_obj,   .best_metric = \"f_meas\" )  auto_xgb$recipe_info }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","title":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","text":"Automatically prep data.frame/tibble use C5.0 algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","text":"","code":"hai_c50_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::recipe() function. .recipe_formula formula going passed. example using iris data formula likely something like Species ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","text":"function automatically prep data.frame/tibble use C5.0 algorithm. C5.0 algorithm lazy learning classification algorithm. expects data presented certain fashion. function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for C5.0 - Recipe — hai_c50_data_prepper","text":"","code":"library(ggplot2)  hai_c50_data_prepper(.data = Titanic, .recipe_formula = Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$where(is.character) rec_obj <- hai_c50_data_prepper(Titanic, Survived ~ .) get_juiced_data(rec_obj) #> # A tibble: 32 × 5 #>    Class Sex    Age       n Survived #>    <fct> <fct>  <fct> <dbl> <fct>    #>  1 1st   Male   Child     0 No       #>  2 2nd   Male   Child     0 No       #>  3 3rd   Male   Child    35 No       #>  4 Crew  Male   Child     0 No       #>  5 1st   Female Child     0 No       #>  6 2nd   Female Child     0 No       #>  7 3rd   Female Child    17 No       #>  8 Crew  Female Child     0 No       #>  9 1st   Male   Adult   118 No       #> 10 2nd   Male   Adult   154 No       #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_control_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a control chart — hai_control_chart","title":"Create a control chart — hai_control_chart","text":"Create control chart, aka Shewhart chart: https://en.wikipedia.org/wiki/Control_chart.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_control_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a control chart — hai_control_chart","text":"","code":"hai_control_chart(   .data,   .value_col,   .x_col,   .center_line = mean,   .std_dev = 3,   .plt_title = NULL,   .plt_catpion = NULL,   .plt_font_size = 11,   .print_plot = TRUE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_control_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a control chart — hai_control_chart","text":".data data frame path csv file read .value_col variable interest mapped y-axis (quoted, ie string) .x_col variable go x-axis, often time variable. unspecified row indices used (quoted) .center_line Function used calculate central tendency. Defaults mean .std_dev Number standard deviations central tendency call point influenced \"special cause variation.\" Defaults 3 .plt_title Plot title .plt_catpion Plot caption .plt_font_size Font size; text elements scaled .print_plot Print plot? Default = TRUE. Set FALSE want assign plot variable modification, last example.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_control_chart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a control chart — hai_control_chart","text":"Generally called side effect printing control chart. Invisibly, returns ggplot object customization.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_control_chart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a control chart — hai_control_chart","text":"Control charts, also known Shewhart charts (Walter . Shewhart) process-behavior charts, statistical process control tool used determine manufacturing business process state control. appropriate say control charts graphical device Statistical Process Monitoring (SPM). Traditional control charts mostly designed monitor process parameters underlying form process distributions known. However, advanced techniques available 21st century incoming data streaming can-monitored even without knowledge underlying process distributions. Distribution-free control charts becoming increasingly popular.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_control_chart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a control chart — hai_control_chart","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_control_chart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a control chart — hai_control_chart","text":"","code":"data_tbl <- tibble::tibble(   day = sample(     c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"),     100, TRUE   ),   person = sample(c(\"Tom\", \"Jane\", \"Alex\"), 100, TRUE),   count = rbinom(100, 20, ifelse(day == \"Friday\", .5, .2)),   date = Sys.Date() - sample.int(100) )  hai_control_chart(.data = data_tbl, .value_col = count, .x_col = date)   # In addition to printing or writing the plot to file, hai_control_chart # returns the plot as a ggplot2 object, which you can then further customize  library(ggplot2) my_chart <- hai_control_chart(data_tbl, count, date)  my_chart +   ylab(\"Number of Adverse Events\") +   scale_x_date(name = \"Week of ... \", date_breaks = \"week\") +   theme(axis.text.x = element_text(angle = -90, vjust = 0.5, hjust = 1))"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","title":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","text":"Automatically prep data.frame/tibble use cubist algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","text":"","code":"hai_cubist_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using diamonds data formula likely something like price ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","text":"function automatically prep data.frame/tibble use cubist algorithm. cubist algorithm regression . function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for Cubist - Recipe — hai_cubist_data_prepper","text":"","code":"library(ggplot2)  hai_cubist_data_prepper(.data = diamonds, .recipe_formula = price ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 9 #>  #> ── Operations  #> • Zero variance filter on: recipes::all_predictors() rec_obj <- hai_cubist_data_prepper(diamonds, price ~ .) get_juiced_data(rec_obj) #> # A tibble: 53,940 × 10 #>    carat cut       color clarity depth table     x     y     z price #>    <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <dbl> <dbl> <dbl> <int> #>  1  0.23 Ideal     E     SI2      61.5    55  3.95  3.98  2.43   326 #>  2  0.21 Premium   E     SI1      59.8    61  3.89  3.84  2.31   326 #>  3  0.23 Good      E     VS1      56.9    65  4.05  4.07  2.31   327 #>  4  0.29 Premium   I     VS2      62.4    58  4.2   4.23  2.63   334 #>  5  0.31 Good      J     SI2      63.3    58  4.34  4.35  2.75   335 #>  6  0.24 Very Good J     VVS2     62.8    57  3.94  3.96  2.48   336 #>  7  0.24 Very Good I     VVS1     62.3    57  3.95  3.98  2.47   336 #>  8  0.26 Very Good H     SI1      61.9    55  4.07  4.11  2.53   337 #>  9  0.22 Fair      E     VS2      65.1    61  3.87  3.78  2.49   337 #> 10  0.23 Very Good H     VS1      59.4    61  4     4.05  2.39   338 #> # ℹ 53,930 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Preprocessor - Imputation — hai_data_impute","title":"Data Preprocessor - Imputation — hai_data_impute","text":"Takes recipe impute missing values using selected recipe. call recipe use quoted argument like \"median\" \"bagged\".","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Preprocessor - Imputation — hai_data_impute","text":"","code":"hai_data_impute(   .recipe_object = NULL,   ...,   .seed_value = 123,   .type_of_imputation = \"mean\",   .number_of_trees = 25,   .neighbors = 5,   .mean_trim = 0,   .roll_statistic,   .roll_window = 5 )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Preprocessor - Imputation — hai_data_impute","text":".recipe_object data want process ... One selector functions choose variables imputed. used imp_vars, dots indicate variables used predict missing data variable. See selections() details .seed_value make results reproducible, set seed. .type_of_imputation quoted argument can one following: \"bagged\" \"knn\" \"linear\" \"lower\" \"mean\" \"median\" \"mode\" \"roll\" .number_of_trees used recipes::step_impute_bag() trees parameter. integer. .neighbors filled integer value .type_of_imputation selected \"knn\". .mean_trim filled fraction .type_of_imputation selected \"mean\". .roll_statistic filled single unquoted function takes single argument mean. filled .type_of_imputation selected \"roll\". .roll_window filled integer value .type_of_imputation selected \"roll\".","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Preprocessor - Imputation — hai_data_impute","text":"list object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Preprocessor - Imputation — hai_data_impute","text":"function get data ready processing many types ml/ai models. intended used inside data processor therefore internal function. documentation exists explain process help user understand parameters can set pre-processor function.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data Preprocessor - Imputation — hai_data_impute","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Preprocessor - Imputation — hai_data_impute","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  date_seq <- seq.Date(from = as.Date(\"2013-01-01\"), length.out = 100, by = \"month\") val_seq <- rep(c(rnorm(9), NA), times = 10) df_tbl <- tibble(   date_col = date_seq,   value    = val_seq )  rec_obj <- recipe(value ~ ., df_tbl)  hai_data_impute(   .recipe_object = rec_obj,   value,   .type_of_imputation = \"roll\",   .roll_statistic = median )$impute_rec_obj %>%   get_juiced_data() #> # A tibble: 100 × 2 #>    date_col     value #>    <date>       <dbl> #>  1 2013-01-01 -1.76   #>  2 2013-02-01  1.09   #>  3 2013-03-01  0.552  #>  4 2013-04-01 -1.04   #>  5 2013-05-01  1.02   #>  6 2013-06-01 -0.0259 #>  7 2013-07-01 -0.703  #>  8 2013-08-01  1.24   #>  9 2013-09-01 -1.64   #> 10 2013-10-01 -0.275  #> # ℹ 90 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Preprocessor - Polynomial Function — hai_data_poly","title":"Data Preprocessor - Polynomial Function — hai_data_poly","text":"Takes recipe scale values using selected recipe.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Preprocessor - Polynomial Function — hai_data_poly","text":"","code":"hai_data_poly(.recipe_object = NULL, ..., .p_degree = 2)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Preprocessor - Polynomial Function — hai_data_poly","text":".recipe_object data want process ... One selector functions choose variables imputed. used imp_vars, dots indicate variables used predict missing data variable. See selections() details .p_degree polynomial degree, integer.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Preprocessor - Polynomial Function — hai_data_poly","text":"list object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_poly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Preprocessor - Polynomial Function — hai_data_poly","text":"function get data ready processing many types ml/ai models. intended used inside data processor therefore internal function. documentation exists explain process help user understand parameters can set pre-processor function. recipes::step_poly()","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_poly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data Preprocessor - Polynomial Function — hai_data_poly","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Preprocessor - Polynomial Function — hai_data_poly","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  date_seq <- seq.Date(from = as.Date(\"2013-01-01\"), length.out = 100, by = \"month\") val_seq <- rep(rnorm(10, mean = 6, sd = 2), times = 10) df_tbl <- tibble(   date_col = date_seq,   value    = val_seq )  rec_obj <- recipe(value ~ ., df_tbl)  hai_data_poly(   .recipe_object = rec_obj,   value )$scale_rec_obj %>%   get_juiced_data() #> # A tibble: 100 × 3 #>    date_col   value_poly_1 value_poly_2 #>    <date>            <dbl>        <dbl> #>  1 2013-01-01      -0.117       0.115   #>  2 2013-02-01      -0.0422     -0.0588  #>  3 2013-03-01       0.0243     -0.115   #>  4 2013-04-01      -0.0537     -0.0397  #>  5 2013-05-01       0.0119     -0.111   #>  6 2013-06-01       0.133      -0.00535 #>  7 2013-07-01      -0.0932      0.0468  #>  8 2013-08-01      -0.113       0.101   #>  9 2013-09-01       0.0512     -0.111   #> 10 2013-10-01       0.198       0.177   #> # ℹ 90 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Preprocessor - Scale/Normalize — hai_data_scale","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":"Takes recipe scale values using selected recipe. call recipe use quoted argument like \"scale\" \"normalize\".","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":"","code":"hai_data_scale(   .recipe_object = NULL,   ...,   .type_of_scale = \"center\",   .range_min = 0,   .range_max = 1,   .scale_factor = 1 )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":".recipe_object data want process ... One selector functions choose variables imputed. used imp_vars, dots indicate variables used predict missing data variable. See selections() details .type_of_scale quoted argument can one following: \"center\" \"normalize\" \"range\" \"scale\" .range_min single numeric value smallest value range. defaults 0. .range_max single numeric value largeest value range. defaults 1. .scale_factor numeric value either 1 2 scales numeric inputs one two standard deviations. dividing two standard deviations, coefficients attached continuous predictors can interpreted way binary inputs. Defaults 1. reference .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":"list object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":"function get data ready processing many types ml/ai models. intended used inside data processor therefore internal function. documentation exists explain process help user understand parameters can set pre-processor function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":"Gelman, . (2007) \"Scaling regression inputs dividing two standard deviations.\" Unpublished. Source: http://www.stat.columbia.edu/~gelman/research/unpublished/standardizing.pdf.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Preprocessor - Scale/Normalize — hai_data_scale","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  date_seq <- seq.Date(from = as.Date(\"2013-01-01\"), length.out = 100, by = \"month\") val_seq <- rep(rnorm(10, mean = 6, sd = 2), times = 10) df_tbl <- tibble(   date_col = date_seq,   value    = val_seq )  rec_obj <- recipe(value ~ ., df_tbl)  hai_data_scale(   .recipe_object = rec_obj,   value,   .type_of_scale = \"center\" )$scale_rec_obj %>%   get_juiced_data() #> # A tibble: 100 × 2 #>    date_col    value #>    <date>      <dbl> #>  1 2013-01-01  1.47  #>  2 2013-02-01 -1.77  #>  3 2013-03-01 -2.55  #>  4 2013-04-01  2.29  #>  5 2013-05-01 -0.869 #>  6 2013-06-01 -0.302 #>  7 2013-07-01 -0.967 #>  8 2013-08-01  0.763 #>  9 2013-09-01  0.329 #> 10 2013-10-01  1.61  #> # ℹ 90 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Preprocessor - Transformation Functions — hai_data_transform","title":"Data Preprocessor - Transformation Functions — hai_data_transform","text":"Takes recipe perform desired transformation selected varialbe(s) using selected recipe. call desired transformation recipe use quoted argument like \"boxcos\", \"bs\" etc.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Preprocessor - Transformation Functions — hai_data_transform","text":"","code":"hai_data_transform(   .recipe_object = NULL,   ...,   .type_of_scale = \"log\",   .bc_limits = c(-5, 5),   .bc_num_unique = 5,   .bs_deg_free = NULL,   .bs_degree = 3,   .log_base = exp(1),   .log_offset = 0,   .logit_offset = 0,   .ns_deg_free = 2,   .rel_shift = 0,   .rel_reverse = FALSE,   .rel_smooth = FALSE,   .yj_limits = c(-5, 5),   .yj_num_unique = 5 )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Preprocessor - Transformation Functions — hai_data_transform","text":".recipe_object data want process ... One selector functions choose variables imputed. used imp_vars, dots indicate variables used predict missing data variable. See selections() details .type_of_scale quoted argument can one following: \"boxcox\" \"bs\" \"log\" \"logit\" \"ns\" \"relu\" \"sqrt\" \"yeojohnson .bc_limits length 2 numeric vector defining range compute transformation parameter lambda. .bc_num_unique integer specify minimum required unique values evaluate transformation .bs_deg_free degrees freedom spline. degrees freedom spline increase, flexible complex curves can generated. single degree freedom used, result rescaled version original data. .bs_degree Degree polynomial spline (integer). .log_base numberic value base. .log_offset optional value add data prior logging (avoid log(0)) .logit_offset numberic value modify values ofthe columns either one zero. modifed x - offset offset respectively. .ns_deg_free degrees freedom natural spline. degrees freedom natural spline increase, flexible complex curves can generated. single degree freedom used, result rescaled version original data. .rel_shift numeric value dictating translation apply data. .rel_reverse logical indicate theleft hinge used opposed right hinge. .rel_smooth logical indicating hte softplus function, smooth approximation rectified linear transformation, used. .yj_limits length 2 numeric vector defining range compute transformation parameter lambda. .yj_num_unique integer data less possible values evaluated transformation.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Preprocessor - Transformation Functions — hai_data_transform","text":"list object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Preprocessor - Transformation Functions — hai_data_transform","text":"function get data ready processing many types ml/ai models. intended used inside data processor therefore internal function. documentation exists explain process help user understand parameters can set pre-processor function. recipes::step_BoxCox()","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data Preprocessor - Transformation Functions — hai_data_transform","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Preprocessor - Transformation Functions — hai_data_transform","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  date_seq <- seq.Date(from = as.Date(\"2013-01-01\"), length.out = 100, by = \"month\") val_seq <- rep(rnorm(10, mean = 6, sd = 2), times = 10) df_tbl <- tibble(   date_col = date_seq,   value    = val_seq )  rec_obj <- recipe(value ~ ., df_tbl)  hai_data_transform(   .recipe_object = rec_obj,   value,   .type_of_scale = \"log\" )$scale_rec_obj %>%   get_juiced_data() #> # A tibble: 100 × 2 #>    date_col   value #>    <date>     <dbl> #>  1 2013-01-01 1.76  #>  2 2013-02-01 0.737 #>  3 2013-03-01 2.23  #>  4 2013-04-01 2.06  #>  5 2013-05-01 1.99  #>  6 2013-06-01 1.62  #>  7 2013-07-01 1.49  #>  8 2013-08-01 1.01  #>  9 2013-09-01 1.56  #> 10 2013-10-01 1.93  #> # ℹ 90 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_trig.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Preprocessor - Trigonometric Functions — hai_data_trig","title":"Data Preprocessor - Trigonometric Functions — hai_data_trig","text":"Takes recipe scale values using selected recipe. call recipe use quoted argument like \"sinh\", \"cosh\" \"tanh\".","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_trig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Preprocessor - Trigonometric Functions — hai_data_trig","text":"","code":"hai_data_trig(   .recipe_object = NULL,   ...,   .type_of_scale = \"sinh\",   .inverse = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_trig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Preprocessor - Trigonometric Functions — hai_data_trig","text":".recipe_object data want process ... One selector functions choose variables imputed. used imp_vars, dots indicate variables used predict missing data variable. See selections() details .type_of_scale quoted argument can one following: \"sinh\" \"cosh\" \"tanh\" .inverse logical: inverse function used? Default FALSE","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_trig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Preprocessor - Trigonometric Functions — hai_data_trig","text":"list object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_trig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Preprocessor - Trigonometric Functions — hai_data_trig","text":"function get data ready processing many types ml/ai models. intended used inside data processor therefore internal function. documentation exists explain process help user understand parameters can set pre-processor function. recipes::step_hyperbolic()","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_trig.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data Preprocessor - Trigonometric Functions — hai_data_trig","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_data_trig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Preprocessor - Trigonometric Functions — hai_data_trig","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  date_seq <- seq.Date(from = as.Date(\"2013-01-01\"), length.out = 100, by = \"month\") val_seq <- rep(rnorm(10, mean = 6, sd = 2), times = 10) df_tbl <- tibble(   date_col = date_seq,   value    = val_seq )  rec_obj <- recipe(value ~ ., df_tbl)  hai_data_trig(   .recipe_object = rec_obj,   value,   .type_of_scale = \"sinh\" )$scale_rec_obj %>%   get_juiced_data() #> # A tibble: 100 × 2 #>    date_col   value #>    <date>     <dbl> #>  1 2013-01-01 126.  #>  2 2013-02-01  58.8 #>  3 2013-03-01 254.  #>  4 2013-04-01 962.  #>  5 2013-05-01  36.9 #>  6 2013-06-01 101.  #>  7 2013-07-01 469.  #>  8 2013-08-01  38.4 #>  9 2013-09-01  21.0 #> 10 2013-10-01 425.  #> # ℹ 90 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_classification_metric_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Metric Set — hai_default_classification_metric_set","title":"Metric Set — hai_default_classification_metric_set","text":"Default classification metric sets yardstick","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_classification_metric_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metric Set — hai_default_classification_metric_set","text":"","code":"hai_default_classification_metric_set()"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_classification_metric_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metric Set — hai_default_classification_metric_set","text":"yardstick metric set tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_classification_metric_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metric Set — hai_default_classification_metric_set","text":"Default classification metric sets yardstick","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_classification_metric_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metric Set — hai_default_classification_metric_set","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_classification_metric_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metric Set — hai_default_classification_metric_set","text":"","code":"hai_default_classification_metric_set() #> # A tibble: 11 × 3 #>    metric       class        direction #>    <chr>        <chr>        <chr>     #>  1 sensitivity  class_metric maximize  #>  2 specificity  class_metric maximize  #>  3 recall       class_metric maximize  #>  4 precision    class_metric maximize  #>  5 mcc          class_metric maximize  #>  6 accuracy     class_metric maximize  #>  7 f_meas       class_metric maximize  #>  8 kap          class_metric maximize  #>  9 ppv          class_metric maximize  #> 10 npv          class_metric maximize  #> 11 bal_accuracy class_metric maximize"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_regression_metric_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Metric Set — hai_default_regression_metric_set","title":"Metric Set — hai_default_regression_metric_set","text":"Default regression metric sets yardstick","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_regression_metric_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metric Set — hai_default_regression_metric_set","text":"","code":"hai_default_regression_metric_set()"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_regression_metric_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metric Set — hai_default_regression_metric_set","text":"yardstick metric set tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_regression_metric_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metric Set — hai_default_regression_metric_set","text":"Default regression metric sets yardstick","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_regression_metric_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metric Set — hai_default_regression_metric_set","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_default_regression_metric_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metric Set — hai_default_regression_metric_set","text":"","code":"hai_default_regression_metric_set() #> # A tibble: 6 × 3 #>   metric class          direction #>   <chr>  <chr>          <chr>     #> 1 mae    numeric_metric minimize  #> 2 mape   numeric_metric minimize  #> 3 mase   numeric_metric minimize  #> 4 smape  numeric_metric minimize  #> 5 rmse   numeric_metric minimize  #> 6 rsq    numeric_metric maximize"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_hist_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Histogram Plot — hai_density_hist_plot","title":"Density Histogram Plot — hai_density_hist_plot","text":"produce ggplot2 plotly histogram plot density information provided hai_get_density_data_tbl function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_hist_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Histogram Plot — hai_density_hist_plot","text":"","code":"hai_density_hist_plot(   .data,   .dist_name_col = distribution,   .value_col = dist_data,   .alpha = 0.382,   .interactive = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_hist_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Histogram Plot — hai_density_hist_plot","text":".data data produced using hai_get_density_data_tbl .dist_name_col column distribution name, distribution set default. .value_col column contains x values comes hai_get_density_data_tbl function. .alpha alpha parameter ggplot .interactive Boolean fo TRUE/FALSE defaulted FALSE. TRUE produce plotly plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_hist_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density Histogram Plot — hai_density_hist_plot","text":"plot, either ggplot2 plotly","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_hist_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density Histogram Plot — hai_density_hist_plot","text":"produce histogram density information produced function hai_get_density_data_tbl. look attribute .data param ensure function used.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_hist_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density Histogram Plot — hai_density_hist_plot","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_hist_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Histogram Plot — hai_density_hist_plot","text":"","code":"library(dplyr)  df <- hai_scale_zero_one_vec(.x = mtcars$mpg) %>%   hai_distribution_comparison_tbl()  dist_data_tbl <- hai_get_dist_data_tbl(df)  hai_density_hist_plot(   .data = dist_data_tbl,   .dist_name_col = distribution,   .value_col = dist_data,   .alpha = 0.5,   .interactive = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Density Histogram Plot — hai_density_plot","title":"Density Histogram Plot — hai_density_plot","text":"produce ggplot2 plotly histogram plot density information provided hai_get_density_data_tbl function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density Histogram Plot — hai_density_plot","text":"","code":"hai_density_plot(   .data,   .dist_name_col,   .x_col,   .y_col,   .size = 1,   .alpha = 0.382,   .interactive = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density Histogram Plot — hai_density_plot","text":".data data produced using hai_get_density_data_tbl .dist_name_col column distribution name, distribution set default. .x_col x value tidied density object. .y_col y value tidied density object. .size size parameter ggplot. .alpha alpha parameter ggplot. .interactive Boolean fo TRUE/FALSE defaulted FALSE. TRUE produce plotly plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density Histogram Plot — hai_density_plot","text":"plot, either ggplot2 plotly","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density Histogram Plot — hai_density_plot","text":"produce density plot density information produced function hai_get_density_data_tbl. look attribute .data param ensure function used.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density Histogram Plot — hai_density_plot","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density Histogram Plot — hai_density_plot","text":"","code":"library(dplyr)  df <- hai_scale_zero_one_vec(.x = mtcars$mpg) %>%   hai_distribution_comparison_tbl()  tidy_density_tbl <- hai_get_density_data_tbl(df)  hai_density_plot(   .data = tidy_density_tbl,   .dist_name_col = distribution,   .x_col = x,   .y_col = y,   .alpha = 0.5,   .interactive = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_qq_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Density QQ Plot — hai_density_qq_plot","title":"Density QQ Plot — hai_density_qq_plot","text":"produce ggplot2 plotly histogram plot density information provided hai_get_density_data_tbl function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_qq_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density QQ Plot — hai_density_qq_plot","text":"","code":"hai_density_qq_plot(   .data,   .dist_name_col = distribution,   .x_col = x,   .y_col = y,   .size = 1,   .alpha = 0.382,   .interactive = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_qq_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density QQ Plot — hai_density_qq_plot","text":".data data produced using hai_get_density_data_tbl .dist_name_col column distribution name, distribution set default. .x_col column contains x values comes hai_get_density_data_tbl function. .y_col column contains y values comes hai_get_density_data_tbl function. .size size parameter ggplot .alpha alpha parameter ggplot .interactive Boolean fo TRUE/FALSE defaulted FALSE. TRUE produce plotly plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_qq_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density QQ Plot — hai_density_qq_plot","text":"plot, either ggplot2 plotly","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_qq_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density QQ Plot — hai_density_qq_plot","text":"produce qq plot density information produced function hai_get_density_data_tbl. look attribute .data param ensure function used.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_qq_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density QQ Plot — hai_density_qq_plot","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_density_qq_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density QQ Plot — hai_density_qq_plot","text":"","code":"library(dplyr)  df <- hai_scale_zero_one_vec(.x = mtcars$mpg) %>%   hai_distribution_comparison_tbl()  tidy_density_tbl <- hai_get_density_data_tbl(df)  hai_density_qq_plot(   .data = tidy_density_tbl,   .dist_name_col = distribution,   .x_col = x,   .y_col = y,   .size = 1,   .alpha = 0.5,   .interactive = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_distribution_comparison_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Data Against Distributions — hai_distribution_comparison_tbl","title":"Compare Data Against Distributions — hai_distribution_comparison_tbl","text":"function attempt get key information data pass . also automatically normalize data 0 1. change distribution just scale order make sure many different types distributions can fit data, help identify distribution passed data . resulting output attributes added get used functions meant compliment . function automatically pass .x parameter hai_skewness_vec() hai_kurtosis_vec() order help create random data distributions. distributions can chosen :","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_distribution_comparison_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Data Against Distributions — hai_distribution_comparison_tbl","text":"","code":"hai_distribution_comparison_tbl(   .x,   .distributions = c(\"gamma\", \"beta\"),   .normalize = TRUE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_distribution_comparison_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Data Against Distributions — hai_distribution_comparison_tbl","text":".x numeric vector analyze. .distributions character vector distributions check. example, c(\"gamma\",\"beta\") .normalize boolean value TRUE/FALSE, default TRUE. normalize data using hai_scale_zero_one_vec function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_distribution_comparison_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Data Against Distributions — hai_distribution_comparison_tbl","text":"tibble.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_distribution_comparison_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Data Against Distributions — hai_distribution_comparison_tbl","text":"Get information empirical distribution data along generated densities distributions. information resulting tibble generated. Three columns generate, Distribution, param .distributions, dist_data list vector density values passed underlying stats r distribution function, density_data, dist_data column passed list(stats::density(unlist(dist_data))) effect giving desired vector can used resultant plots (dist_data) can interact density object . skewness distribution negative, gamma beta distributions skew set equal kurtosis kurtosis set equal sqrt((skew)^2)","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_distribution_comparison_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare Data Against Distributions — hai_distribution_comparison_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_distribution_comparison_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Data Against Distributions — hai_distribution_comparison_tbl","text":"","code":"x_vec <- hai_scale_zero_one_vec(mtcars$mpg) df <- hai_distribution_comparison_tbl(   .x = x_vec,   .distributions = c(\"beta\", \"gamma\") ) df #> # A tibble: 3 × 3 #>   distribution dist_data  density_data #>   <chr>        <list>     <list>       #> 1 beta         <dbl [32]> <density>    #> 2 gamma        <dbl [32]> <density>    #> 3 empirical    <dbl [32]> <density>"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for Earth - Recipe — hai_earth_data_prepper","title":"Prep Data for Earth - Recipe — hai_earth_data_prepper","text":"Automatically prep data.frame/tibble use Earth algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for Earth - Recipe — hai_earth_data_prepper","text":"","code":"hai_earth_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for Earth - Recipe — hai_earth_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using diamonds data formula likely something like price ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for Earth - Recipe — hai_earth_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for Earth - Recipe — hai_earth_data_prepper","text":"function automatically prep data.frame/tibble use Earth algorithm. Earth algorithm classification regression. function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for Earth - Recipe — hai_earth_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for Earth - Recipe — hai_earth_data_prepper","text":"","code":"library(ggplot2)  # Regression hai_earth_data_prepper(.data = diamonds, .recipe_formula = price ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 9 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$wher(is.character) #> • Novel factor level assignment for: recipes::all_nominal_predictors() #> • Dummy variables from: recipes::all_nominal_predictors() #> • Zero variance filter on: recipes::all_predictors() reg_obj <- hai_earth_data_prepper(diamonds, price ~ .) get_juiced_data(reg_obj) #> # A tibble: 53,940 × 27 #>    carat depth table     x     y     z price  cut_1  cut_2  cut_3  cut_4   cut_5 #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <int>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl> #>  1  0.23  61.5    55  3.95  3.98  2.43   326  0.359 -0.109 -0.522 -0.567 -0.315  #>  2  0.21  59.8    61  3.89  3.84  2.31   326  0.120 -0.436 -0.298  0.378  0.630  #>  3  0.23  56.9    65  4.05  4.07  2.31   327 -0.359 -0.109  0.522 -0.567  0.315  #>  4  0.29  62.4    58  4.2   4.23  2.63   334  0.120 -0.436 -0.298  0.378  0.630  #>  5  0.31  63.3    58  4.34  4.35  2.75   335 -0.359 -0.109  0.522 -0.567  0.315  #>  6  0.24  62.8    57  3.94  3.96  2.48   336 -0.120 -0.436  0.298  0.378 -0.630  #>  7  0.24  62.3    57  3.95  3.98  2.47   336 -0.120 -0.436  0.298  0.378 -0.630  #>  8  0.26  61.9    55  4.07  4.11  2.53   337 -0.120 -0.436  0.298  0.378 -0.630  #>  9  0.22  65.1    61  3.87  3.78  2.49   337 -0.598  0.546 -0.373  0.189 -0.0630 #> 10  0.23  59.4    61  4     4.05  2.39   338 -0.120 -0.436  0.298  0.378 -0.630  #> # ℹ 53,930 more rows #> # ℹ 15 more variables: color_1 <dbl>, color_2 <dbl>, color_3 <dbl>, #> #   color_4 <dbl>, color_5 <dbl>, color_6 <dbl>, color_7 <dbl>, #> #   clarity_1 <dbl>, clarity_2 <dbl>, clarity_3 <dbl>, clarity_4 <dbl>, #> #   clarity_5 <dbl>, clarity_6 <dbl>, clarity_7 <dbl>, clarity_8 <dbl>  # Classification hai_earth_data_prepper(Titanic, Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$wher(is.character) #> • Novel factor level assignment for: recipes::all_nominal_predictors() #> • Dummy variables from: recipes::all_nominal_predictors() #> • Zero variance filter on: recipes::all_predictors() cla_obj <- hai_earth_data_prepper(Titanic, Survived ~ .) get_juiced_data(cla_obj) #> # A tibble: 32 × 7 #>        n Survived Class_X2nd Class_X3rd Class_Crew Sex_Male Age_Child #>    <dbl> <fct>         <dbl>      <dbl>      <dbl>    <dbl>     <dbl> #>  1     0 No                0          0          0        1         1 #>  2     0 No                1          0          0        1         1 #>  3    35 No                0          1          0        1         1 #>  4     0 No                0          0          1        1         1 #>  5     0 No                0          0          0        0         1 #>  6     0 No                1          0          0        0         1 #>  7    17 No                0          1          0        0         1 #>  8     0 No                0          0          1        0         1 #>  9   118 No                0          0          0        1         0 #> 10   154 No                1          0          0        1         0 #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Function Fourier — hai_fourier_augment","title":"Augment Function Fourier — hai_fourier_augment","text":"Takes numeric vector(s) date return tibble one following: \"sin\" \"cos\" \"sincos\" c(\"sin\",\"cos\",\"sincos\")","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Function Fourier — hai_fourier_augment","text":"","code":"hai_fourier_augment(   .data,   .value,   .period,   .order,   .names = \"auto\",   .scale_type = c(\"sin\", \"cos\", \"sincos\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Function Fourier — hai_fourier_augment","text":".data data passed augmented function. .value passed rlang::enquo() capture vectors want augment. .period number observations complete cycle .order fourier term order .names default \"auto\" .scale_type character one following: \"sin\",\"cos\", sincos\" can passed setting param equal c(\"sin\",\"cos\",\"sincos\")","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Function Fourier — hai_fourier_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Function Fourier — hai_fourier_augment","text":"Takes numeric vector date return vector one following: \"sin\" \"cos\" \"sincos\" c(\"sin\",\"cos\",\"sincos\") function intended used order add columns tibble.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Function Fourier — hai_fourier_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Function Fourier — hai_fourier_augment","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 10 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  hai_fourier_augment(data_tbl, b, .period = 12, .order = 1, .scale_type = \"sin\") #> # A tibble: 10 × 4 #>    date_col         a      b fourier_b_sin #>    <date>       <dbl>  <dbl>         <dbl> #>  1 2021-01-01 -0.496  0.304         0.158  #>  2 2021-02-01 -1.42   0.160         0.0837 #>  3 2021-03-01 -0.885  0.197         0.103  #>  4 2021-04-01  1.68   0.0704        0.0368 #>  5 2021-05-01 -0.0517 0.748         0.382  #>  6 2021-06-01  0.234  0.431         0.224  #>  7 2021-07-01 -0.661  0.0389        0.0204 #>  8 2021-08-01 -1.17   0.265         0.138  #>  9 2021-09-01 -0.449  0.660         0.339  #> 10 2021-10-01  0.276  0.300         0.156  hai_fourier_augment(data_tbl, b, .period = 12, .order = 1, .scale_type = \"cos\") #> # A tibble: 10 × 4 #>    date_col         a      b fourier_b_cos #>    <date>       <dbl>  <dbl>         <dbl> #>  1 2021-01-01 -0.496  0.304          0.987 #>  2 2021-02-01 -1.42   0.160          0.996 #>  3 2021-03-01 -0.885  0.197          0.995 #>  4 2021-04-01  1.68   0.0704         0.999 #>  5 2021-05-01 -0.0517 0.748          0.924 #>  6 2021-06-01  0.234  0.431          0.975 #>  7 2021-07-01 -0.661  0.0389         1.00  #>  8 2021-08-01 -1.17   0.265          0.990 #>  9 2021-09-01 -0.449  0.660          0.941 #> 10 2021-10-01  0.276  0.300          0.988"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","title":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","text":"Takes numeric vector(s) date return tibble one following: \"sin\" \"cos\" \"sincos\" c(\"sin\",\"cos\",\"sincos\") either values falls zero, zero else one","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","text":"","code":"hai_fourier_discrete_augment(   .data,   .value,   .period,   .order,   .names = \"auto\",   .scale_type = c(\"sin\", \"cos\", \"sincos\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","text":".data data passed augmented function. .value passed rlang::enquo() capture vectors want augment. .period number observations complete cycle .order fourier term order .names default \"auto\" .scale_type character one following: \"sin\",\"cos\", sincos\" can passed setting param equal c(\"sin\",\"cos\",\"sincos\")","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","text":"Takes numeric vector date return vector one following: \"sin\" \"cos\" \"sincos\" c(\"sin\",\"cos\",\"sincos\") function intended used order add columns tibble.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Function Fourier Discrete — hai_fourier_discrete_augment","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 24 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  hai_fourier_discrete_augment(data_tbl, b, .period = 2 * 12, .order = 1, .scale_type = \"sin\") #> # A tibble: 24 × 4 #>    date_col         a      b fourier_discrete_b_sin #>    <date>       <dbl>  <dbl>                  <dbl> #>  1 2021-01-01  2.70   0.998                       1 #>  2 2021-02-01 -0.239  0.151                       1 #>  3 2021-03-01  1.79   0.628                       1 #>  4 2021-04-01  0.162  0.148                       1 #>  5 2021-05-01 -1.87   0.800                       1 #>  6 2021-06-01 -0.841  0.0888                      1 #>  7 2021-07-01  0.187  0.732                       1 #>  8 2021-08-01 -0.249  0.259                       1 #>  9 2021-09-01 -0.424  0.959                       1 #> 10 2021-10-01  0.0819 0.201                       1 #> # ℹ 14 more rows hai_fourier_discrete_augment(data_tbl, b, .period = 2 * 12, .order = 1, .scale_type = \"cos\") #> # A tibble: 24 × 4 #>    date_col         a      b fourier_discrete_b_cos #>    <date>       <dbl>  <dbl>                  <dbl> #>  1 2021-01-01  2.70   0.998                       1 #>  2 2021-02-01 -0.239  0.151                       1 #>  3 2021-03-01  1.79   0.628                       1 #>  4 2021-04-01  0.162  0.148                       1 #>  5 2021-05-01 -1.87   0.800                       1 #>  6 2021-06-01 -0.841  0.0888                      1 #>  7 2021-07-01  0.187  0.732                       1 #>  8 2021-08-01 -0.249  0.259                       1 #>  9 2021-09-01 -0.424  0.959                       1 #> 10 2021-10-01  0.0819 0.201                       1 #> # ℹ 14 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","title":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","text":"Takes numeric vector date return vector one following: \"sin\" \"cos\" \"sincos\" value = sin(x) * cos(x) either values falls zero, zero else one","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","text":"","code":"hai_fourier_discrete_vec(   .x,   .period,   .order,   .scale_type = c(\"sin\", \"cos\", \"sincos\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","text":".x numeric vector .period number observations complete cycle .order fourier term order .scale_type character one following: \"sin\",\"cos\",\"sincos\"","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","text":"numeric vector 1's 0's","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","text":"Takes numeric vector date return vector one following: \"sin\" \"cos\" \"sincos\" internal caluclation straightforward: sin = sin(2 * pi * h * x), h = .order/.period cos = cos(2 * pi * h * x), h = .order/.period sincos = sin(2 * pi * h * x) * cos(2 * pi * h * x) h = .order/.period function can used . also basis function hai_fourier_discrete_augment().","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_discrete_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Function Discrete Fourier — hai_fourier_discrete_vec","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 24 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  vec_1 <- hai_fourier_discrete_vec(data_tbl$a, .period = 12, .order = 1, .scale_type = \"sin\") vec_2 <- hai_fourier_discrete_vec(data_tbl$a, .period = 12, .order = 1, .scale_type = \"cos\") vec_3 <- hai_fourier_discrete_vec(data_tbl$a, .period = 12, .order = 1, .scale_type = \"sincos\")  plot(data_tbl$b) lines(vec_1, col = \"blue\") lines(vec_2, col = \"red\") lines(vec_3, col = \"green\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Function Fourier — hai_fourier_vec","title":"Vector Function Fourier — hai_fourier_vec","text":"Takes numeric vector return vector one following: \"sin\" \"cos\" \"sincos\" value = sin(x) * cos(x)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Function Fourier — hai_fourier_vec","text":"","code":"hai_fourier_vec(.x, .period, .order, .scale_type = c(\"sin\", \"cos\", \"sincos\"))"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Function Fourier — hai_fourier_vec","text":".x numeric vector .period number observations complete cycle .order fourier term order .scale_type character one following: \"sin\",\"cos\",\"sincos\"","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Function Fourier — hai_fourier_vec","text":"numeric vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector Function Fourier — hai_fourier_vec","text":"Takes numeric vector return vector one following: \"sin\" \"cos\" \"sincos\" internal caluclation straightforward: sin = sin(2 * pi * h * x), h = .order/.period cos = cos(2 * pi * h * x), h = .order/.period sincos = sin(2 * pi * h * x) * cos(2 * pi * h * x) h = .order/.period function can used . also basis function hai_fourier_augment().","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector Function Fourier — hai_fourier_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_fourier_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Function Fourier — hai_fourier_vec","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 25 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  vec_1 <- hai_fourier_vec(data_tbl$b, .period = 12, .order = 1, .scale_type = \"sin\") vec_2 <- hai_fourier_vec(data_tbl$b, .period = 12, .order = 1, .scale_type = \"cos\") vec_3 <- hai_fourier_vec(data_tbl$date_col, .period = 12, .order = 1, .scale_type = \"sincos\")  plot(data_tbl$b) lines(vec_1, col = \"blue\") lines(vec_2, col = \"red\") lines(vec_3, col = \"green\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_density_data_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Density Data Helper — hai_get_density_data_tbl","title":"Get Density Data Helper — hai_get_density_data_tbl","text":"function return tibble can either nested/unnested, grouped un-grouped. .data argument must output hai_distribution_comparison_tbl() function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_density_data_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Density Data Helper — hai_get_density_data_tbl","text":"","code":"hai_get_density_data_tbl(.data, .unnest = TRUE, .group_data = TRUE)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_density_data_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Density Data Helper — hai_get_density_data_tbl","text":".data data hai_distribution_comparison_tbl() function function looks attribute hai_dist_compare_tbl .unnest resulting tibble un-nested, Boolean value TRUE/FALSE. default TRUE .group_data resulting tibble grouped, Boolean value TRUE/FALSE. default FALSE","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_density_data_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Density Data Helper — hai_get_density_data_tbl","text":"tibble.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_density_data_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Density Data Helper — hai_get_density_data_tbl","text":"function expects take output hai_distribution_comparison_tbl() function. returns tibble tidy density data.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_density_data_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Density Data Helper — hai_get_density_data_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_density_data_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Density Data Helper — hai_get_density_data_tbl","text":"","code":"library(dplyr)  df <- hai_scale_zero_one_vec(.x = mtcars$mpg) %>%   hai_distribution_comparison_tbl() hai_get_density_data_tbl(df) #> # A tibble: 1,536 × 3 #> # Groups:   distribution [3] #>    distribution      x       y #>    <chr>         <dbl>   <dbl> #>  1 gamma        -0.395 0.00670 #>  2 gamma        -0.391 0.00741 #>  3 gamma        -0.387 0.00819 #>  4 gamma        -0.383 0.00903 #>  5 gamma        -0.378 0.00996 #>  6 gamma        -0.374 0.0110  #>  7 gamma        -0.370 0.0121  #>  8 gamma        -0.366 0.0133  #>  9 gamma        -0.362 0.0146  #> 10 gamma        -0.357 0.0160  #> # ℹ 1,526 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_dist_data_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Distribution Data Helper — hai_get_dist_data_tbl","title":"Get Distribution Data Helper — hai_get_dist_data_tbl","text":"function return tibble can either nested/unnested, grouped ungrouped. .data argument must output hai_distribution_comparison_tbl() function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_dist_data_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Distribution Data Helper — hai_get_dist_data_tbl","text":"","code":"hai_get_dist_data_tbl(.data, .unnest = TRUE, .group_data = FALSE)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_dist_data_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Distribution Data Helper — hai_get_dist_data_tbl","text":".data data hai_distribution_comparison_tbl() function function looks class 'hai_dist_data' .unnest resulting tibble unnested, boolean value TRUE/FALSE. default TRUE .group_data Shold resulting tibble grouped, boolean value TRUE/FALSE. default FALSE","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_dist_data_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Distribution Data Helper — hai_get_dist_data_tbl","text":"tibble.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_dist_data_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Distribution Data Helper — hai_get_dist_data_tbl","text":"function expects take output hai_distribution_comparison_tbl() function. returns tibble distribution randomly generated data produced associated stats r function like rnorm","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_dist_data_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Distribution Data Helper — hai_get_dist_data_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_get_dist_data_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Distribution Data Helper — hai_get_dist_data_tbl","text":"","code":"library(dplyr)  df <- hai_scale_zero_one_vec(.x = mtcars$mpg) %>%   hai_distribution_comparison_tbl() hai_get_dist_data_tbl(df) #> # A tibble: 96 × 2 #>    distribution dist_data #>    <chr>            <dbl> #>  1 gamma          0.00211 #>  2 gamma          0.133   #>  3 gamma          0.0426  #>  4 gamma          0.0340  #>  5 gamma          0.456   #>  6 gamma          0.0329  #>  7 gamma          0.239   #>  8 gamma          0.0916  #>  9 gamma          0.798   #> 10 gamma          0.666   #> # ℹ 86 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","title":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","text":"Automatically prep data.frame/tibble use glmnet algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","text":"","code":"hai_glmnet_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using iris data formula likely something like Species ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","text":"function automatically prep data.frame/tibble use glmnet algorithm. expects data presented certain fashion. function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for glmnet - Recipe — hai_glmnet_data_prepper","text":"","code":"library(ggplot2)  hai_glmnet_data_prepper(.data = Titanic, .recipe_formula = Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$where(is.character) #> • Novel factor level assignment for: recipes::all_nominal_predictors() #> • Dummy variables from: recipes::all_nominal_predictors() #> • Zero variance filter on: recipes::all_predictors() #> • Centering and scaling for: recipes::all_numeric_predictors() rec_obj <- hai_glmnet_data_prepper(Titanic, Survived ~ .) get_juiced_data(rec_obj) #> # A tibble: 32 × 7 #>         n Survived Class_X2nd Class_X3rd Class_Crew Sex_Male Age_Child #>     <dbl> <fct>         <dbl>      <dbl>      <dbl>    <dbl>     <dbl> #>  1 -0.506 No           -0.568     -0.568     -0.568    0.984     0.984 #>  2 -0.506 No            1.70      -0.568     -0.568    0.984     0.984 #>  3 -0.248 No           -0.568      1.70      -0.568    0.984     0.984 #>  4 -0.506 No           -0.568     -0.568      1.70     0.984     0.984 #>  5 -0.506 No           -0.568     -0.568     -0.568   -0.984     0.984 #>  6 -0.506 No            1.70      -0.568     -0.568   -0.984     0.984 #>  7 -0.381 No           -0.568      1.70      -0.568   -0.984     0.984 #>  8 -0.506 No           -0.568     -0.568      1.70    -0.984     0.984 #>  9  0.362 No           -0.568     -0.568     -0.568    0.984    -0.984 #> 10  0.627 No            1.70      -0.568     -0.568    0.984    -0.984 #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_histogram_facet_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram Facet Plot — hai_histogram_facet_plot","title":"Histogram Facet Plot — hai_histogram_facet_plot","text":"function expects data.frame/tibble return faceted histogram.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_histogram_facet_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram Facet Plot — hai_histogram_facet_plot","text":"","code":"hai_histogram_facet_plot(   .data,   .bins = 10,   .scale_data = FALSE,   .ncol = 5,   .fct_reorder = FALSE,   .fct_rev = FALSE,   .fill = \"steelblue\",   .color = \"white\",   .scale = \"free\",   .interactive = FALSE )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_histogram_facet_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram Facet Plot — hai_histogram_facet_plot","text":".data data want pass function. .bins number bins histograms. .scale_data boolean set FALSE. TRUE use hai_scale_zero_one_vec() [0, 1] scale data. .ncol number columns facet_warp argument. .fct_reorder factor column reordered? TRUE/FALSE, default FALSE .fct_rev factor column reversed? TRUE/FALSE, default FALSE .fill Default steelblue .color Default 'white' .scale Default 'free' .interactive Default FALSE, TRUE produce plotly plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_histogram_facet_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram Facet Plot — hai_histogram_facet_plot","text":"ggplot plotly plot","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_histogram_facet_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Histogram Facet Plot — hai_histogram_facet_plot","text":"Takes data.frame/tibble returns faceted historgram.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_histogram_facet_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Histogram Facet Plot — hai_histogram_facet_plot","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_histogram_facet_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram Facet Plot — hai_histogram_facet_plot","text":"","code":"hai_histogram_facet_plot(.data = iris)  hai_histogram_facet_plot(.data = iris, .scale_data = TRUE)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Function Hyperbolic — hai_hyperbolic_augment","title":"Augment Function Hyperbolic — hai_hyperbolic_augment","text":"Takes numeric vector(s) date return tibble one following: \"sin\" \"cos\" \"tan\" \"sincos\" c(\"sin\",\"cos\",\"tan\", \"sincos\")","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Function Hyperbolic — hai_hyperbolic_augment","text":"","code":"hai_hyperbolic_augment(   .data,   .value,   .names = \"auto\",   .scale_type = c(\"sin\", \"cos\", \"tan\", \"sincos\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Function Hyperbolic — hai_hyperbolic_augment","text":".data data passed augmented function. .value passed rlang::enquo() capture vectors want augment. .names default \"auto\" .scale_type character one following: \"sin\",\"cos\",\"tan\", \"sincos\" can passed setting param equal c(\"sin\",\"cos\",\"tan\",\"sincos\")","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Function Hyperbolic — hai_hyperbolic_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Function Hyperbolic — hai_hyperbolic_augment","text":"Takes numeric vector date return vector one following: \"sin\" \"cos\" \"tan\" \"sincos\" c(\"sin\",\"cos\",\"tan\", \"sincos\") function intended used order add columns tibble.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Function Hyperbolic — hai_hyperbolic_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Function Hyperbolic — hai_hyperbolic_augment","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 10 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  hai_hyperbolic_augment(data_tbl, b, .scale_type = \"sin\") #> # A tibble: 10 × 4 #>    date_col        a     b hyperbolic_b_sin #>    <date>      <dbl> <dbl>            <dbl> #>  1 2021-01-01  0.853 0.450            0.435 #>  2 2021-02-01 -0.405 0.973            0.827 #>  3 2021-03-01 -0.420 0.128            0.127 #>  4 2021-04-01  0.327 0.758            0.687 #>  5 2021-05-01  0.975 0.996            0.839 #>  6 2021-06-01 -0.832 0.768            0.695 #>  7 2021-07-01  1.99  0.670            0.621 #>  8 2021-08-01 -0.384 0.162            0.161 #>  9 2021-09-01 -1.09  0.989            0.835 #> 10 2021-10-01 -0.726 0.327            0.321 hai_hyperbolic_augment(data_tbl, b, .scale_type = \"tan\") #> # A tibble: 10 × 4 #>    date_col        a     b hyperbolic_b_tan #>    <date>      <dbl> <dbl>            <dbl> #>  1 2021-01-01  0.853 0.450            0.484 #>  2 2021-02-01 -0.405 0.973            1.47  #>  3 2021-03-01 -0.420 0.128            0.128 #>  4 2021-04-01  0.327 0.758            0.946 #>  5 2021-05-01  0.975 0.996            1.54  #>  6 2021-06-01 -0.832 0.768            0.965 #>  7 2021-07-01  1.99  0.670            0.792 #>  8 2021-08-01 -0.384 0.162            0.163 #>  9 2021-09-01 -1.09  0.989            1.52  #> 10 2021-10-01 -0.726 0.327            0.339"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Function Hyperbolic — hai_hyperbolic_vec","title":"Vector Function Hyperbolic — hai_hyperbolic_vec","text":"Takes numeric vector return vector one following: \"sin\" \"cos\" \"tan\" \"sincos\" value = sin(x) * cos(x)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Function Hyperbolic — hai_hyperbolic_vec","text":"","code":"hai_hyperbolic_vec(.x, .scale_type = c(\"sin\", \"cos\", \"tan\", \"sincos\"))"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Function Hyperbolic — hai_hyperbolic_vec","text":".x numeric vector .scale_type character one following: \"sin\",\"cos\",\"tan\",\"sincos\"","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Function Hyperbolic — hai_hyperbolic_vec","text":"numeric vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector Function Hyperbolic — hai_hyperbolic_vec","text":"Takes numeric vector return vector one following: \"sin\" \"cos\" \"tan\" \"sincos\" function can used . also basis function hai_hyperbolic_augment().","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector Function Hyperbolic — hai_hyperbolic_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Function Hyperbolic — hai_hyperbolic_vec","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 25 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  vec_1 <- hai_hyperbolic_vec(data_tbl$b, .scale_type = \"sin\") vec_2 <- hai_hyperbolic_vec(data_tbl$b, .scale_type = \"cos\") vec_3 <- hai_hyperbolic_vec(data_tbl$b, .scale_type = \"sincos\")  plot(data_tbl$b) lines(vec_1, col = \"blue\") lines(vec_2, col = \"red\") lines(vec_3, col = \"green\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic K-Means H2O — hai_kmeans_automl","title":"Automatic K-Means H2O — hai_kmeans_automl","text":"wrapper around h2o::h2o.kmeans() function return list object lot useful easy use tidy style information.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic K-Means H2O — hai_kmeans_automl","text":"","code":"hai_kmeans_automl(   .data,   .split_ratio = 0.8,   .seed = 1234,   .centers = 10,   .standardize = TRUE,   .print_model_summary = TRUE,   .predictors,   .categorical_encoding = \"auto\",   .initialization_mode = \"Furthest\",   .max_iterations = 100 )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic K-Means H2O — hai_kmeans_automl","text":".data data passed clustering. .split_ratio ratio training testing splits. .seed default 1234, can set integer. .centers default 1. Specify number clusters (groups data) data set. .standardize default set TRUE. TRUE numeric columns set zero mean unit variance. .print_model_summary boolean controls model summary printed console. default TRUE. .predictors must form c(\"column_1\", \"column_2\", ... \"column_n\") .categorical_encoding Can one following: \"auto\" \"enum\" \"one_hot_explicit\" \"binary\" \"eigen\" \"label_encoder\" \"sort_by_response\" \"enum_limited\" .initialization_mode can one following: \"Random\" \"Furthest (default) \"PlusPlus\" .max_iterations default 100. specifies number training iterations","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic K-Means H2O — hai_kmeans_automl","text":"list object","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatic K-Means H2O — hai_kmeans_automl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic K-Means H2O — hai_kmeans_automl","text":"","code":"if (FALSE) { h2o.init() output <- hai_kmeans_automl(   .data = iris,   .predictors = c(\"Sepal.Width\", \"Sepal.Length\", \"Petal.Width\", \"Petal.Length\"),   .standardize = FALSE ) h2o.shutdown() }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic K-Means H2O — hai_kmeans_automl_predict","title":"Automatic K-Means H2O — hai_kmeans_automl_predict","text":"wrapper around h2o::h2o.predict() function return list object lot useful easy use tidy style information.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic K-Means H2O — hai_kmeans_automl_predict","text":"","code":"hai_kmeans_automl_predict(.input)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic K-Means H2O — hai_kmeans_automl_predict","text":".input output hai_kmeans_automl() function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic K-Means H2O — hai_kmeans_automl_predict","text":"list object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl_predict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatic K-Means H2O — hai_kmeans_automl_predict","text":"function internally take output assigned hai_kmeans_automl() function return list useful information. items returned follows: prediction - h2o dataframe predictions prediction_tbl - h2o predictions tibble format valid_tbl - validation data tibble format pred_full_tbl - entire validation set predictions attached using base::cbind(). predictions column called predicted_cluster formate factor using forcats::as_factor()","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl_predict.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatic K-Means H2O — hai_kmeans_automl_predict","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic K-Means H2O — hai_kmeans_automl_predict","text":"","code":"if (FALSE) { h2o.init()  output <- hai_kmeans_automl(   .data = iris,   .predictors = c(\"Sepal.Width\", \"Sepal.Length\", \"Petal.Width\", \"Petal.Length\"),   .standardize = FALSE )  pred <- hai_kmeans_automl_predict(output)  h2o.shutdown() }"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_mapped_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Means Mapping Function — hai_kmeans_mapped_tbl","title":"K-Means Mapping Function — hai_kmeans_mapped_tbl","text":"Create tibble maps hai_kmeans_obj() using purrr::map() create nested data.frame/tibble holds n centers. tibble used help create scree plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_mapped_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Means Mapping Function — hai_kmeans_mapped_tbl","text":"","code":"hai_kmeans_mapped_tbl(.data, .centers = 15)  kmeans_mapped_tbl(.data, .centers = 15)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_mapped_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-Means Mapping Function — hai_kmeans_mapped_tbl","text":".data must tibble working environment hai_kmeans_user_item_tbl() .centers many different centers want try","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_mapped_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-Means Mapping Function — hai_kmeans_mapped_tbl","text":"nested tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_mapped_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K-Means Mapping Function — hai_kmeans_mapped_tbl","text":"Takes single parameter .centers. used create tibble map hai_kmeans_obj() function list creating nested tibble.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_mapped_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"K-Means Mapping Function — hai_kmeans_mapped_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_mapped_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-Means Mapping Function — hai_kmeans_mapped_tbl","text":"","code":"library(healthyR.data) library(dplyr)  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  ui_tbl <- hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record )  hai_kmeans_mapped_tbl(ui_tbl) #> # A tibble: 15 × 3 #>    centers k_means  glance           #>      <int> <list>   <list>           #>  1       1 <kmeans> <tibble [1 × 4]> #>  2       2 <kmeans> <tibble [1 × 4]> #>  3       3 <kmeans> <tibble [1 × 4]> #>  4       4 <kmeans> <tibble [1 × 4]> #>  5       5 <kmeans> <tibble [1 × 4]> #>  6       6 <kmeans> <tibble [1 × 4]> #>  7       7 <kmeans> <tibble [1 × 4]> #>  8       8 <kmeans> <tibble [1 × 4]> #>  9       9 <kmeans> <tibble [1 × 4]> #> 10      10 <kmeans> <tibble [1 × 4]> #> 11      11 <kmeans> <tibble [1 × 4]> #> 12      12 <kmeans> <tibble [1 × 4]> #> 13      13 <kmeans> <tibble [1 × 4]> #> 14      14 <kmeans> <tibble [1 × 4]> #> 15      15 <kmeans> <tibble [1 × 4]>"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Means Object — hai_kmeans_obj","title":"K-Means Object — hai_kmeans_obj","text":"Takes output hai_kmeans_user_item_tbl() function applies k-means algorithm using stats::kmeans()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Means Object — hai_kmeans_obj","text":"","code":"hai_kmeans_obj(.data, .centers = 5)  kmeans_obj(.data, .centers = 5)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-Means Object — hai_kmeans_obj","text":".data data gets passed hai_kmeans_user_item_tbl() .centers many initial centers start ","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-Means Object — hai_kmeans_obj","text":"stats k-means object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K-Means Object — hai_kmeans_obj","text":"Uses stats::kmeans() function creates wrapper around .","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_obj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"K-Means Object — hai_kmeans_obj","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-Means Object — hai_kmeans_obj","text":"","code":"library(healthyR.data) library(dplyr)  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record ) %>%   hai_kmeans_obj() #> K-means clustering with 5 clusters of sizes 3, 5, 2, 1, 12 #>  #> Cluster means: #>   Blue Cross Commercial Compensation Exchange Plans        HMO   Medicaid #> 1 0.07912806 0.02702478 0.0002914681    0.009301354 0.07723873 0.21428392 #> 2 0.13375082 0.03542694 0.0121998471    0.016160901 0.10724914 0.05150211 #> 3 0.27188303 0.05712358 0.0003293808    0.039065198 0.18065096 0.04246134 #> 4 0.00000000 0.00000000 0.0000000000    0.000000000 0.27272727 0.18181818 #> 5 0.07837450 0.02182129 0.0043244347    0.006202137 0.04493860 0.03684344 #>   Medicaid HMO Medicare A Medicare HMO    No Fault    Self Pay #> 1   0.28209782 0.23654904   0.04362913 0.002672067 0.027783628 #> 2   0.13107693 0.35217108   0.11769769 0.008242686 0.034521844 #> 3   0.24760799 0.10958146   0.03584494 0.000000000 0.015452115 #> 4   0.45454545 0.09090909   0.00000000 0.000000000 0.000000000 #> 5   0.08001653 0.56250366   0.15152338 0.003475542 0.009976485 #>  #> Clustering vector: #>  [1] 1 3 5 5 5 5 2 2 5 5 3 5 1 2 5 2 5 1 2 5 5 4 5 #>  #> Within cluster sum of squares by cluster: #> [1] 0.04450884 0.02592247 0.03549821 0.00000000 0.09625399 #>  (between_SS / total_SS =  85.6 %) #>  #> Available components: #>  #> [1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\" #> [6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_data_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","title":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","text":"Take data hai_kmeans_mapped_tbl() unnest tibble inspection use hai_kmeans_scree_plt() function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_data_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","text":"","code":"hai_kmeans_scree_data_tbl(.data)  kmeans_scree_data_tbl(.data)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_data_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","text":".data must tibble working environment hai_kmeans_mapped_tbl()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_data_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","text":"nested tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_data_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","text":"Takes single parameter .data hai_kmeans_mapped_tbl() transforms tibble used hai_kmeans_scree_plt(). show values (tot.withinss) center.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_data_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_data_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-Means Scree Plot Data Table — hai_kmeans_scree_data_tbl","text":"","code":"library(healthyR.data) library(dplyr)  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  ui_tbl <- hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record )  kmm_tbl <- hai_kmeans_mapped_tbl(ui_tbl)  hai_kmeans_scree_data_tbl(kmm_tbl) #> # A tibble: 15 × 2 #>    centers tot.withinss #>      <int>        <dbl> #>  1       1       1.41   #>  2       2       0.592  #>  3       3       0.372  #>  4       4       0.276  #>  5       5       0.202  #>  6       6       0.159  #>  7       7       0.124  #>  8       8       0.0884 #>  9       9       0.0716 #> 10      10       0.0578 #> 11      11       0.0460 #> 12      12       0.0363 #> 13      13       0.0272 #> 14      14       0.0251 #> 15      15       0.0160"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_plt.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Means Scree Plot — hai_kmeans_scree_plt","title":"K-Means Scree Plot — hai_kmeans_scree_plt","text":"Create scree-plot hai_kmeans_mapped_tbl() function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_plt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Means Scree Plot — hai_kmeans_scree_plt","text":"","code":"hai_kmeans_scree_plt(.data)  kmeans_scree_plt(.data)  hai_kmeans_scree_plot(.data)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_plt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-Means Scree Plot — hai_kmeans_scree_plt","text":".data data hai_kmeans_mapped_tbl() function","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_plt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-Means Scree Plot — hai_kmeans_scree_plt","text":"ggplot2 plot","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_plt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K-Means Scree Plot — hai_kmeans_scree_plt","text":"Outputs scree-plot","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_plt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"K-Means Scree Plot — hai_kmeans_scree_plt","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_scree_plt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-Means Scree Plot — hai_kmeans_scree_plt","text":"","code":"library(healthyR.data) library(dplyr)  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  ui_tbl <- hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record )  kmm_tbl <- hai_kmeans_mapped_tbl(ui_tbl)  hai_kmeans_scree_plt(.data = kmm_tbl)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_tidy_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","title":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","text":"K-Means tidy functions","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_tidy_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","text":"","code":"hai_kmeans_tidy_tbl(.kmeans_obj, .data, .tidy_type = \"tidy\")  kmeans_tidy_tbl(.kmeans_obj, .data, .tidy_type = \"tidy\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_tidy_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","text":".kmeans_obj stats::kmeans() object .data user item tibble created hai_kmeans_user_item_tbl() .tidy_type \"tidy\",\"glance\", \"augment\"","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_tidy_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","text":"tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_tidy_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","text":"Takes k-means object associated user item tibble returns one items asked . Either: broom::tidy(), broom::glance() broom::augment(). function defaults broom::tidy().","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_tidy_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_tidy_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-Means Object Tidy Functions — hai_kmeans_tidy_tbl","text":"","code":"library(healthyR.data) library(dplyr) library(broom) #> Warning: package 'broom' was built under R version 4.2.2  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  uit_tbl <- hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record )  km_obj <- hai_kmeans_obj(uit_tbl)  hai_kmeans_tidy_tbl(   .kmeans_obj = km_obj,   .data = uit_tbl,   .tidy_type = \"augment\" ) #> # A tibble: 23 × 2 #>    service_line                  cluster #>    <chr>                         <fct>   #>  1 Alcohol Abuse                 2       #>  2 Bariatric Surgery For Obesity 3       #>  3 CHF                           4       #>  4 COPD                          4       #>  5 CVA                           4       #>  6 Carotid Endarterectomy        4       #>  7 Cellulitis                    1       #>  8 Chest Pain                    1       #>  9 GI Hemorrhage                 4       #> 10 Joint Replacement             4       #> # ℹ 13 more rows  hai_kmeans_tidy_tbl(   .kmeans_obj = km_obj,   .data = uit_tbl,   .tidy_type = \"glance\" ) #> # A tibble: 1 × 4 #>   totss tot.withinss betweenss  iter #>   <dbl>        <dbl>     <dbl> <int> #> 1  1.41        0.202      1.21     3  hai_kmeans_tidy_tbl(   .kmeans_obj = km_obj,   .data = uit_tbl,   .tidy_type = \"tidy\" ) %>%   glimpse() #> Rows: 5 #> Columns: 14 #> $ `Blue Cross`     <dbl> 0.13375082, 0.07912806, 0.27188303, 0.07837450, 0.000… #> $ Commercial       <dbl> 0.03542694, 0.02702478, 0.05712358, 0.02182129, 0.000… #> $ Compensation     <dbl> 0.0121998471, 0.0002914681, 0.0003293808, 0.004324434… #> $ `Exchange Plans` <dbl> 0.016160901, 0.009301354, 0.039065198, 0.006202137, 0… #> $ HMO              <dbl> 0.10724914, 0.07723873, 0.18065096, 0.04493860, 0.272… #> $ Medicaid         <dbl> 0.05150211, 0.21428392, 0.04246134, 0.03684344, 0.181… #> $ `Medicaid HMO`   <dbl> 0.13107693, 0.28209782, 0.24760799, 0.08001653, 0.454… #> $ `Medicare A`     <dbl> 0.35217108, 0.23654904, 0.10958146, 0.56250366, 0.090… #> $ `Medicare HMO`   <dbl> 0.11769769, 0.04362913, 0.03584494, 0.15152338, 0.000… #> $ `No Fault`       <dbl> 0.008242686, 0.002672067, 0.000000000, 0.003475542, 0… #> $ `Self Pay`       <dbl> 0.034521844, 0.027783628, 0.015452115, 0.009976485, 0… #> $ size             <int> 5, 3, 2, 12, 1 #> $ withinss         <dbl> 0.02592247, 0.04450884, 0.03549821, 0.09625399, 0.000… #> $ cluster          <fct> 1, 2, 3, 4, 5"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_user_item_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","title":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","text":"Takes data.frame/tibble transforms aggregated/normalized user-item tibble proportions. user need input parameters rows/user columns/items.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_user_item_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","text":"","code":"hai_kmeans_user_item_tbl(.data, .row_input, .col_input, .record_input)  kmeans_user_item_tbl(.data, .row_input, .col_input, .record_input)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_user_item_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","text":".data data want transform .row_input column going row (user) .col_input column going column (item) .record_input column going summed aggregation normalization process.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_user_item_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","text":"aggregated/normalized user item tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_user_item_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","text":"function used using k-mean model. commonly referred user-item matrix \"users\" tend rows \"items\" (e.g. orders) columns. must supply column can summed aggregation normalization process occur.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_user_item_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_user_item_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-Means User Item Tibble — hai_kmeans_user_item_tbl","text":"","code":"library(healthyR.data) library(dplyr)  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record ) #> # A tibble: 23 × 12 #>    service_line     `Blue Cross` Commercial Compensation `Exchange Plans`    HMO #>    <chr>                   <dbl>      <dbl>        <dbl>            <dbl>  <dbl> #>  1 Alcohol Abuse          0.0941    0.0321      0.000525          0.0116  0.0788 #>  2 Bariatric Surge…       0.317     0.0583      0                 0.0518  0.168  #>  3 CHF                    0.0295    0.00958     0.000518          0.00414 0.0205 #>  4 COPD                   0.0493    0.0228      0.000228          0.00548 0.0342 #>  5 CVA                    0.0647    0.0246      0.00107           0.0107  0.0524 #>  6 Carotid Endarte…       0.0845    0.0282      0                 0       0.0141 #>  7 Cellulitis             0.110     0.0339      0.0118            0.00847 0.0805 #>  8 Chest Pain             0.144     0.0391      0.00290           0.00543 0.112  #>  9 GI Hemorrhage          0.0542    0.0175      0.00125           0.00834 0.0480 #> 10 Joint Replaceme…       0.139     0.0179      0.0336            0.00673 0.0516 #> # ℹ 13 more rows #> # ℹ 6 more variables: Medicaid <dbl>, `Medicaid HMO` <dbl>, `Medicare A` <dbl>, #> #   `Medicare HMO` <dbl>, `No Fault` <dbl>, `Self Pay` <dbl>"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","title":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","text":"Automatically prep data.frame/tibble use k-NN algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","text":"","code":"hai_knn_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using iris data formula likely something like Species ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","text":"function automatically prep data.frame/tibble use k-NN algorithm. k-NN algorithm lazy learning classification algorithm. expects data presented certain fashion. function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for k-NN - Recipe — hai_knn_data_prepper","text":"","code":"library(ggplot2)  hai_knn_data_prepper(.data = Titanic, .recipe_formula = Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Novel factor level assignment for: recipes::all_nominal_predictors() #> • Dummy variables from: recipes::all_nominal_predictors() #> • Zero variance filter on: recipes::all_predictors() #> • Centering and scaling for: recipes::all_numeric() rec_obj <- hai_knn_data_prepper(iris, Species ~ .) get_juiced_data(rec_obj) #> # A tibble: 150 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1       -0.898      1.02          -1.34       -1.31 setosa  #>  2       -1.14      -0.132         -1.34       -1.31 setosa  #>  3       -1.38       0.327         -1.39       -1.31 setosa  #>  4       -1.50       0.0979        -1.28       -1.31 setosa  #>  5       -1.02       1.25          -1.34       -1.31 setosa  #>  6       -0.535      1.93          -1.17       -1.05 setosa  #>  7       -1.50       0.786         -1.34       -1.18 setosa  #>  8       -1.02       0.786         -1.28       -1.31 setosa  #>  9       -1.74      -0.361         -1.34       -1.31 setosa  #> 10       -1.14       0.0979        -1.28       -1.44 setosa  #> # ℹ 140 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kurtosis_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Kurtosis of a Vector — hai_kurtosis_vec","title":"Compute Kurtosis of a Vector — hai_kurtosis_vec","text":"function takes vector input return kurtosis vector. length vector must least four numbers. kurtosis explains sharpness peak distribution data. ((1/n) * sum(x - mu})^4) / ((()1/n) * sum(x - mu)^2)^2","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kurtosis_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Kurtosis of a Vector — hai_kurtosis_vec","text":"","code":"hai_kurtosis_vec(.x)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kurtosis_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Kurtosis of a Vector — hai_kurtosis_vec","text":".x numeric vector length four .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kurtosis_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Kurtosis of a Vector — hai_kurtosis_vec","text":"kurtosis vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kurtosis_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Kurtosis of a Vector — hai_kurtosis_vec","text":"function return kurtosis vector.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kurtosis_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Kurtosis of a Vector — hai_kurtosis_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_kurtosis_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Kurtosis of a Vector — hai_kurtosis_vec","text":"","code":"hai_kurtosis_vec(rnorm(100, 3, 2)) #> [1] 2.800297"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_polynomial_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Polynomial Features — hai_polynomial_augment","title":"Augment Polynomial Features — hai_polynomial_augment","text":"function takes data table predictor column. user can either create formula using .formula parameter , leave default NULL user must enter .degree .pred_col column.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_polynomial_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Polynomial Features — hai_polynomial_augment","text":"","code":"hai_polynomial_augment(   .data,   .formula = NULL,   .pred_col = NULL,   .degree = 1,   .new_col_prefix = \"nt_\" )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_polynomial_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Polynomial Features — hai_polynomial_augment","text":".data data passed augmented function. .formula valid formula like 'y ~ .^2' NULL. .pred_col passed rlang::enquo() capture vector designate 'y' column. .degree integer used set degree poly function. degree must less unique data points error . .new_col_prefix default \"nt_\" stands \"new_term\". can set whatever like, long quoted string.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_polynomial_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Polynomial Features — hai_polynomial_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_polynomial_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Polynomial Features — hai_polynomial_augment","text":"valid data.frame/tibble must passed function. required user either enter .formula .degree .pred_col otherwise function stop error . hood function create stats::poly() function .formula left NULL. example: .formula = ~ .^2 .degree = 2, .pred_col = also parameter .new_col_prefix add character string column names easily identified line. default 'nt_'","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_polynomial_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Polynomial Features — hai_polynomial_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_polynomial_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Polynomial Features — hai_polynomial_augment","text":"","code":"suppressPackageStartupMessages(library(dplyr)) data_tbl <- data.frame(   A = c(0, 2, 4),   B = c(1, 3, 5),   C = c(2, 4, 6) )  hai_polynomial_augment(.data = data_tbl, .pred_col = A, .degree = 2, .new_col_prefix = \"n\") #> The formula used is: A ~ poly(B, 2) + poly(C, 2) #> # A tibble: 3 × 8 #>       A     B     C nintercept npoly_b_2_1 npoly_b_2_2 npoly_c_2_1 npoly_c_2_2 #>   <dbl> <dbl> <dbl>      <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1     0     1     2          1   -7.07e- 1       0.408   -7.07e- 1       0.408 #> 2     2     3     4          1   -7.85e-17      -0.816   -7.85e-17      -0.816 #> 3     4     5     6          1    7.07e- 1       0.408    7.07e- 1       0.408 hai_polynomial_augment(.data = data_tbl, .formula = A ~ .^2, .degree = 1) #> The formula used is: A ~ .^2 #> # A tibble: 3 × 7 #>       A     B     C nt_intercept  nt_b  nt_c nt_b_c #>   <dbl> <dbl> <dbl>        <dbl> <dbl> <dbl>  <dbl> #> 1     0     1     2            1     1     2      2 #> 2     2     3     4            1     3     4     12 #> 3     4     5     6            1     5     6     30"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","title":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","text":"Automatically prep data.frame/tibble use Ranger algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","text":"","code":"hai_ranger_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using diamonds data formula likely something like price ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","text":"function automatically prep data.frame/tibble use Ranger algorithm. function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for Ranger - Recipe — hai_ranger_data_prepper","text":"","code":"library(ggplot2)  # Regression hai_ranger_data_prepper(.data = diamonds, .recipe_formula = price ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 9 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$where(is.character) reg_obj <- hai_ranger_data_prepper(diamonds, price ~ .) get_juiced_data(reg_obj) #> # A tibble: 53,940 × 10 #>    carat cut       color clarity depth table     x     y     z price #>    <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <dbl> <dbl> <dbl> <int> #>  1  0.23 Ideal     E     SI2      61.5    55  3.95  3.98  2.43   326 #>  2  0.21 Premium   E     SI1      59.8    61  3.89  3.84  2.31   326 #>  3  0.23 Good      E     VS1      56.9    65  4.05  4.07  2.31   327 #>  4  0.29 Premium   I     VS2      62.4    58  4.2   4.23  2.63   334 #>  5  0.31 Good      J     SI2      63.3    58  4.34  4.35  2.75   335 #>  6  0.24 Very Good J     VVS2     62.8    57  3.94  3.96  2.48   336 #>  7  0.24 Very Good I     VVS1     62.3    57  3.95  3.98  2.47   336 #>  8  0.26 Very Good H     SI1      61.9    55  4.07  4.11  2.53   337 #>  9  0.22 Fair      E     VS2      65.1    61  3.87  3.78  2.49   337 #> 10  0.23 Very Good H     VS1      59.4    61  4     4.05  2.39   338 #> # ℹ 53,930 more rows  # Classification hai_ranger_data_prepper(Titanic, Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$where(is.character) cla_obj <- hai_ranger_data_prepper(Titanic, Survived ~ .) get_juiced_data(cla_obj) #> # A tibble: 32 × 5 #>    Class Sex    Age       n Survived #>    <fct> <fct>  <fct> <dbl> <fct>    #>  1 1st   Male   Child     0 No       #>  2 2nd   Male   Child     0 No       #>  3 3rd   Male   Child    35 No       #>  4 Crew  Male   Child     0 No       #>  5 1st   Female Child     0 No       #>  6 2nd   Female Child     0 No       #>  7 3rd   Female Child    17 No       #>  8 Crew  Female Child     0 No       #>  9 1st   Male   Adult   118 No       #> 10 2nd   Male   Adult   154 No       #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_range_statistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the range statistic — hai_range_statistic","title":"Get the range statistic — hai_range_statistic","text":"Takes numeric vector returns back range vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_range_statistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the range statistic — hai_range_statistic","text":"","code":"hai_range_statistic(.x)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_range_statistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the range statistic — hai_range_statistic","text":".x numeric vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_range_statistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the range statistic — hai_range_statistic","text":"single number, range statistic","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_range_statistic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the range statistic — hai_range_statistic","text":"Takes numeric vector returns range vector using diff range functions.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_range_statistic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the range statistic — hai_range_statistic","text":"Steven P. Sandeson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_range_statistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the range statistic — hai_range_statistic","text":"","code":"hai_range_statistic(seq(1:10)) #> [1] 9"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_color_colorblind.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide Colorblind Compliant Colors — hai_scale_color_colorblind","title":"Provide Colorblind Compliant Colors — hai_scale_color_colorblind","text":"8 Hex RGB color definitions suitable charts colorblind people.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_color_colorblind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide Colorblind Compliant Colors — hai_scale_color_colorblind","text":"","code":"hai_scale_color_colorblind(..., theme = \"hai\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_color_colorblind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide Colorblind Compliant Colors — hai_scale_color_colorblind","text":"... Data passed ggplot object theme Right now hai . Anything else render error.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_color_colorblind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide Colorblind Compliant Colors — hai_scale_color_colorblind","text":"gggplot layer","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_color_colorblind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provide Colorblind Compliant Colors — hai_scale_color_colorblind","text":"function used others order help render plots color blind.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_color_colorblind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Provide Colorblind Compliant Colors — hai_scale_color_colorblind","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_fill_colorblind.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide Colorblind Compliant Colors — hai_scale_fill_colorblind","title":"Provide Colorblind Compliant Colors — hai_scale_fill_colorblind","text":"8 Hex RGB color definitions suitable charts colorblind people.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_fill_colorblind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide Colorblind Compliant Colors — hai_scale_fill_colorblind","text":"","code":"hai_scale_fill_colorblind(..., theme = \"hai\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_fill_colorblind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide Colorblind Compliant Colors — hai_scale_fill_colorblind","text":"... Data passed ggplot object theme Right now hai . Anything else render error.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_fill_colorblind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide Colorblind Compliant Colors — hai_scale_fill_colorblind","text":"gggplot layer","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_fill_colorblind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provide Colorblind Compliant Colors — hai_scale_fill_colorblind","text":"function used others order help render plots color blind.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_fill_colorblind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Provide Colorblind Compliant Colors — hai_scale_fill_colorblind","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Function Scale Zero One — hai_scale_zero_one_augment","title":"Augment Function Scale Zero One — hai_scale_zero_one_augment","text":"Takes numeric vector return vector scaled [0,1]","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Function Scale Zero One — hai_scale_zero_one_augment","text":"","code":"hai_scale_zero_one_augment(.data, .value, .names = \"auto\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Function Scale Zero One — hai_scale_zero_one_augment","text":".data data passed augmented function. .value passed rlang::enquo() capture vectors want augment. .names set 'auto' default can user supplied character string.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Function Scale Zero One — hai_scale_zero_one_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Function Scale Zero One — hai_scale_zero_one_augment","text":"Takes numeric vector return vector scaled [0,1] input vector must numeric. computation fairly straightforward. may helpful trying compare distributions data distribution like beta fitdistrplus package requires data 0 1 $$y[h] = (x - min(x))/(max(x) - min(x))$$ function intended used order add columns tibble.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Function Scale Zero One — hai_scale_zero_one_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Function Scale Zero One — hai_scale_zero_one_augment","text":"","code":"df <- data.frame(x = rnorm(100, 2, 1)) hai_scale_zero_one_augment(df, x) #> # A tibble: 100 × 2 #>        x hai_scale_zero_one_x #>    <dbl>                <dbl> #>  1 0.108               0.0748 #>  2 2.75                0.656  #>  3 1.84                0.457  #>  4 2.08                0.510  #>  5 0.387               0.136  #>  6 1.55                0.394  #>  7 1.60                0.403  #>  8 1.27                0.331  #>  9 1.09                0.292  #> 10 3.90                0.911  #> # ℹ 90 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","title":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","text":"Takes numeric vector return vector scaled [0,1]","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","text":"","code":"hai_scale_zero_one_vec(.x)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","text":".x numeric vector scaled [0,1] inclusive.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","text":"numeric vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","text":"Takes numeric vector return vector scaled [0,1] input vector must numeric. computation fairly straightforward. may helpful trying compare distributions data distribution like beta fitdistrplus package requires data 0 1 $$y[h] = (x - min(x))/(max(x) - min(x))$$ function can used . also basis function hai_scale_zero_one_augment().","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zero_one_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Function Scale to Zero and One — hai_scale_zero_one_vec","text":"","code":"vec_1 <- rnorm(100, 2, 1) vec_2 <- hai_scale_zero_one_vec(vec_1)  dens_1 <- density(vec_1) dens_2 <- density(vec_2) max_x <- max(dens_1$x, dens_2$x) max_y <- max(dens_1$y, dens_2$y) plot(dens_1,   asp = max_y / max_x, main = \"Density vec_1 (Red) and vec_2 (Blue)\",   col = \"red\", xlab = \"\", ylab = \"Density of Vec 1 and Vec 2\" ) lines(dens_2, col = \"blue\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Function Scale Zero One — hai_scale_zscore_augment","title":"Augment Function Scale Zero One — hai_scale_zscore_augment","text":"Takes numeric vector return vector scaled mean standard deviation","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Function Scale Zero One — hai_scale_zscore_augment","text":"","code":"hai_scale_zscore_augment(.data, .value, .names = \"auto\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Function Scale Zero One — hai_scale_zscore_augment","text":".data data passed augmented function. .value passed rlang::enquo() capture vectors want augment. .names set 'auto' default can user supplied character string.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Function Scale Zero One — hai_scale_zscore_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Function Scale Zero One — hai_scale_zscore_augment","text":"Takes numeric vector return vector scaled mean standard deviation. input vector must numeric. computation fairly straightforward. may helpful trying compare distributions data distribution like beta fitdistrplus package requires data 0 1 $$y[h] = (x - mean(x) / sd(x))$$ function intended used order add columns tibble.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Function Scale Zero One — hai_scale_zscore_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Function Scale Zero One — hai_scale_zscore_augment","text":"","code":"df <- data.frame(x = mtcars$mpg) hai_scale_zscore_augment(df, x) #> # A tibble: 32 × 2 #>        x hai_scale_zscore_x #>    <dbl>              <dbl> #>  1  21                0.151 #>  2  21                0.151 #>  3  22.8              0.450 #>  4  21.4              0.217 #>  5  18.7             -0.231 #>  6  18.1             -0.330 #>  7  14.3             -0.961 #>  8  24.4              0.715 #>  9  22.8              0.450 #> 10  19.2             -0.148 #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","title":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","text":"Takes numeric vector return vector scaled mean standard deviation","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","text":"","code":"hai_scale_zscore_vec(.x)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","text":".x numeric vector scaled mean standard deviation inclusive.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","text":"numeric vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","text":"Takes numeric vector return vector scaled mean standard deviation. input vector must numeric. computation fairly straightforward. may helpful trying compare distributions data distribution like beta fitdistrplus package requires data 0 1 $$y[h] = (x - mean(x) / sd(x))$$ function can used . also basis function hai_scale_zscore_augment().","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_scale_zscore_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Function Scale to Zero and One — hai_scale_zscore_vec","text":"","code":"vec_1 <- mtcars$mpg vec_2 <- hai_scale_zscore_vec(vec_1)  ax <- pretty(min(vec_1, vec_2):max(vec_1, vec_2), n = 12)  hist(vec_1, breaks = ax, col = \"blue\") hist(vec_2, breaks = ax, col = \"red\", add = TRUE)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Skewed Feature Columns — hai_skewed_features","title":"Get Skewed Feature Columns — hai_skewed_features","text":"Takes data.frame/tibble returns vector names columns skewed.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Skewed Feature Columns — hai_skewed_features","text":"","code":"hai_skewed_features(.data, .threshold = 0.6, .drop_keys = NULL)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Skewed Feature Columns — hai_skewed_features","text":".data data.frame/tibble passing . .threshold level skewness indicates feel column considered skewed. .drop_keys c() character vector columns want passed function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Skewed Feature Columns — hai_skewed_features","text":"character vector column names skewed.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Skewed Feature Columns — hai_skewed_features","text":"Takes data.frame/tibble returns vector names skewed columns. two parameters. first .threshold parameter set level skewness want order consider column skewed. second .drop_keys, columns want considered whatever reason skewness calculation.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Skewed Feature Columns — hai_skewed_features","text":"Steven P. Sandeson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Skewed Feature Columns — hai_skewed_features","text":"","code":"hai_skewed_features(mtcars) #> [1] \"mpg\"  \"hp\"   \"carb\" hai_skewed_features(mtcars, .drop_keys = c(\"mpg\", \"hp\")) #> [1] \"carb\" hai_skewed_features(mtcars, .drop_keys = \"hp\") #> [1] \"mpg\"  \"carb\""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewness_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Skewness of a Vector — hai_skewness_vec","title":"Compute Skewness of a Vector — hai_skewness_vec","text":"function takes vector input return skewness vector. length vector must least four numbers. skewness explains 'tailedness' distribution data. ((1/n) * sum(x - mu})^3) / ((()1/n) * sum(x - mu)^2)^(3/2)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewness_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Skewness of a Vector — hai_skewness_vec","text":"","code":"hai_skewness_vec(.x)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewness_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Skewness of a Vector — hai_skewness_vec","text":".x numeric vector length four .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewness_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Skewness of a Vector — hai_skewness_vec","text":"skewness vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewness_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Skewness of a Vector — hai_skewness_vec","text":"function return skewness vector.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewness_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Skewness of a Vector — hai_skewness_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_skewness_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Skewness of a Vector — hai_skewness_vec","text":"","code":"hai_skewness_vec(rnorm(100, 3, 2)) #> [1] 0.004541527"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","title":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","text":"Automatically prep data.frame/tibble use SVM_Poly algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","text":"","code":"hai_svm_poly_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using diamonds data formula likely something like price ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","text":"function automatically prep data.frame/tibble use SVM_Poly algorithm. SVM_Poly algorithm regression . function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for SVM_Poly - Recipe — hai_svm_poly_data_prepper","text":"","code":"library(ggplot2)  # Regression hai_svm_poly_data_prepper(.data = diamonds, .recipe_formula = price ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 9 #>  #> ── Operations  #> • Zero variance filter on: recipes::all_predictors() #> • Centering and scaling for: recipes::all_numeric_predictors() reg_obj <- hai_svm_poly_data_prepper(diamonds, price ~ .) get_juiced_data(reg_obj) #> # A tibble: 53,940 × 10 #>    carat cut       color clarity  depth  table     x     y     z price #>    <dbl> <ord>     <ord> <ord>    <dbl>  <dbl> <dbl> <dbl> <dbl> <int> #>  1 -1.20 Ideal     E     SI2     -0.174 -1.10  -1.59 -1.54 -1.57   326 #>  2 -1.24 Premium   E     SI1     -1.36   1.59  -1.64 -1.66 -1.74   326 #>  3 -1.20 Good      E     VS1     -3.38   3.38  -1.50 -1.46 -1.74   327 #>  4 -1.07 Premium   I     VS2      0.454  0.243 -1.36 -1.32 -1.29   334 #>  5 -1.03 Good      J     SI2      1.08   0.243 -1.24 -1.21 -1.12   335 #>  6 -1.18 Very Good J     VVS2     0.733 -0.205 -1.60 -1.55 -1.50   336 #>  7 -1.18 Very Good I     VVS1     0.384 -0.205 -1.59 -1.54 -1.51   336 #>  8 -1.13 Very Good H     SI1      0.105 -1.10  -1.48 -1.42 -1.43   337 #>  9 -1.22 Fair      E     VS2      2.34   1.59  -1.66 -1.71 -1.49   337 #> 10 -1.20 Very Good H     VS1     -1.64   1.59  -1.54 -1.47 -1.63   338 #> # ℹ 53,930 more rows  # Classification hai_svm_poly_data_prepper(Titanic, Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Zero variance filter on: recipes::all_predictors() #> • Centering and scaling for: recipes::all_numeric_predictors() cla_obj <- hai_svm_poly_data_prepper(Titanic, Survived ~ .) get_juiced_data(cla_obj) #> # A tibble: 32 × 5 #>    Class Sex    Age        n Survived #>    <fct> <fct>  <fct>  <dbl> <fct>    #>  1 1st   Male   Child -0.506 No       #>  2 2nd   Male   Child -0.506 No       #>  3 3rd   Male   Child -0.248 No       #>  4 Crew  Male   Child -0.506 No       #>  5 1st   Female Child -0.506 No       #>  6 2nd   Female Child -0.506 No       #>  7 3rd   Female Child -0.381 No       #>  8 Crew  Female Child -0.506 No       #>  9 1st   Male   Adult  0.362 No       #> 10 2nd   Male   Adult  0.627 No       #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","title":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","text":"Automatically prep data.frame/tibble use SVM_RBF algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","text":"","code":"hai_svm_rbf_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using diamonds data formula likely something like price ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","text":"function automatically prep data.frame/tibble use SVM_RBF algorithm. SVM_RBF algorithm regression . function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for SVM_RBF - Recipe — hai_svm_rbf_data_prepper","text":"","code":"library(ggplot2)  # Regression hai_svm_rbf_data_prepper(.data = diamonds, .recipe_formula = price ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 9 #>  #> ── Operations  #> • Zero variance filter on: recipes::all_predictors() #> • Centering and scaling for: recipes::all_numeric_predictors() reg_obj <- hai_svm_rbf_data_prepper(diamonds, price ~ .) get_juiced_data(reg_obj) #> # A tibble: 53,940 × 10 #>    carat cut       color clarity  depth  table     x     y     z price #>    <dbl> <ord>     <ord> <ord>    <dbl>  <dbl> <dbl> <dbl> <dbl> <int> #>  1 -1.20 Ideal     E     SI2     -0.174 -1.10  -1.59 -1.54 -1.57   326 #>  2 -1.24 Premium   E     SI1     -1.36   1.59  -1.64 -1.66 -1.74   326 #>  3 -1.20 Good      E     VS1     -3.38   3.38  -1.50 -1.46 -1.74   327 #>  4 -1.07 Premium   I     VS2      0.454  0.243 -1.36 -1.32 -1.29   334 #>  5 -1.03 Good      J     SI2      1.08   0.243 -1.24 -1.21 -1.12   335 #>  6 -1.18 Very Good J     VVS2     0.733 -0.205 -1.60 -1.55 -1.50   336 #>  7 -1.18 Very Good I     VVS1     0.384 -0.205 -1.59 -1.54 -1.51   336 #>  8 -1.13 Very Good H     SI1      0.105 -1.10  -1.48 -1.42 -1.43   337 #>  9 -1.22 Fair      E     VS2      2.34   1.59  -1.66 -1.71 -1.49   337 #> 10 -1.20 Very Good H     VS1     -1.64   1.59  -1.54 -1.47 -1.63   338 #> # ℹ 53,930 more rows  # Classification hai_svm_rbf_data_prepper(Titanic, Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Zero variance filter on: recipes::all_predictors() #> • Centering and scaling for: recipes::all_numeric_predictors() cla_obj <- hai_svm_rbf_data_prepper(Titanic, Survived ~ .) get_juiced_data(cla_obj) #> # A tibble: 32 × 5 #>    Class Sex    Age        n Survived #>    <fct> <fct>  <fct>  <dbl> <fct>    #>  1 1st   Male   Child -0.506 No       #>  2 2nd   Male   Child -0.506 No       #>  3 3rd   Male   Child -0.248 No       #>  4 Crew  Male   Child -0.506 No       #>  5 1st   Female Child -0.506 No       #>  6 2nd   Female Child -0.506 No       #>  7 3rd   Female Child -0.381 No       #>  8 Crew  Female Child -0.506 No       #>  9 1st   Male   Adult  0.362 No       #> 10 2nd   Male   Adult  0.627 No       #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_list.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP Projection — hai_umap_list","title":"UMAP Projection — hai_umap_list","text":"Create umap object uwot::umap() function.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP Projection — hai_umap_list","text":"","code":"hai_umap_list(.data, .kmeans_map_tbl, .k_cluster = 5)  umap_list(.data, .kmeans_map_tbl, .k_cluster = 5)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UMAP Projection — hai_umap_list","text":".data data hai_kmeans_user_item_tbl() function. .kmeans_map_tbl data hai_kmeans_mapped_tbl(). .k_cluster Pick desired amount clusters analysis scree plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UMAP Projection — hai_umap_list","text":"list tibbles umap object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UMAP Projection — hai_umap_list","text":"takes user item table/matix produced hai_kmeans_user_item_tbl() function. function uses defaults uwot::umap().","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"UMAP Projection — hai_umap_list","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP Projection — hai_umap_list","text":"","code":"library(healthyR.data) library(dplyr) library(broom)  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  uit_tbl <- hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record )  kmm_tbl <- hai_kmeans_mapped_tbl(uit_tbl)  umap_list(.data = uit_tbl, kmm_tbl, 3) #> New names: #> • `` -> `...1` #> • `` -> `...2` #> Joining with `by = join_by(service_line)` #> $umap_obj #>             [,1]       [,2] #>  [1,]  0.3756617  1.6266386 #>  [2,]  1.2128247  1.6145231 #>  [3,] -1.2789301 -1.8276432 #>  [4,] -0.9147857  0.1789848 #>  [5,] -1.5418426 -0.9628437 #>  [6,] -0.7886008 -1.7511490 #>  [7,]  1.0354418  0.7103454 #>  [8,]  1.7965878  0.9313165 #>  [9,] -1.6583286 -1.5955647 #> [10,] -0.2247573 -0.6083411 #> [11,]  1.4786886  1.1960394 #> [12,] -1.2884568 -1.1867798 #> [13,]  0.7334341  1.2225553 #> [14,]  1.7564687  0.4660722 #> [15,] -0.4933723  0.1304485 #> [16,]  0.9683708  0.1873237 #> [17,] -1.0406839 -0.9888724 #> [18,]  0.4560446  0.8561479 #> [19,]  1.3455967  0.3654672 #> [20,] -1.1865085 -0.3827456 #> [21,] -0.6881925 -0.5083588 #> [22,]  0.8312610  1.8049146 #> [23,] -0.8859214 -1.4784792 #> attr(,\"scaled:center\") #> [1]   4.197665 -12.600502 #>  #> $umap_results_tbl #> # A tibble: 23 × 3 #>         x      y service_line                  #>     <dbl>  <dbl> <chr>                         #>  1  0.376  1.63  Alcohol Abuse                 #>  2  1.21   1.61  Bariatric Surgery For Obesity #>  3 -1.28  -1.83  CHF                           #>  4 -0.915  0.179 COPD                          #>  5 -1.54  -0.963 CVA                           #>  6 -0.789 -1.75  Carotid Endarterectomy        #>  7  1.04   0.710 Cellulitis                    #>  8  1.80   0.931 Chest Pain                    #>  9 -1.66  -1.60  GI Hemorrhage                 #> 10 -0.225 -0.608 Joint Replacement             #> # ℹ 13 more rows #>  #> $kmeans_obj #> K-means clustering with 3 clusters of sizes 5, 6, 12 #>  #> Cluster means: #>   Blue Cross Commercial Compensation Exchange Plans        HMO   Medicaid #> 1  0.1495475 0.03679700 0.0003066332    0.020729565 0.16252855 0.13072521 #> 2  0.1170278 0.03141187 0.0101665392    0.013865190 0.09822472 0.08557952 #> 3  0.0783745 0.02182129 0.0043244347    0.006202137 0.04493860 0.03684344 #>   Medicaid HMO Medicare A Medicare HMO    No Fault    Self Pay #> 1   0.31446157  0.1318675   0.03192357 0.001364577 0.019748398 #> 2   0.14652195  0.3535395   0.10524131 0.007067791 0.031353724 #> 3   0.08001653  0.5625037   0.15152338 0.003475542 0.009976485 #>  #> Clustering vector: #>  [1] 1 1 3 3 3 3 2 2 3 3 1 3 1 2 3 2 3 2 2 3 3 1 3 #>  #> Within cluster sum of squares by cluster: #> [1] 0.19152559 0.08456928 0.09625399 #>  (between_SS / total_SS =  73.6 %) #>  #> Available components: #>  #> [1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\" #> [6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"       #>  #> $kmeans_cluster_tbl #> # A tibble: 23 × 2 #>    service_line                  .cluster #>    <chr>                         <fct>    #>  1 Alcohol Abuse                 1        #>  2 Bariatric Surgery For Obesity 1        #>  3 CHF                           3        #>  4 COPD                          3        #>  5 CVA                           3        #>  6 Carotid Endarterectomy        3        #>  7 Cellulitis                    2        #>  8 Chest Pain                    2        #>  9 GI Hemorrhage                 3        #> 10 Joint Replacement             3        #> # ℹ 13 more rows #>  #> $umap_kmeans_cluster_results_tbl #> # A tibble: 23 × 4 #>         x      y service_line                  .cluster #>     <dbl>  <dbl> <chr>                         <fct>    #>  1  0.376  1.63  Alcohol Abuse                 1        #>  2  1.21   1.61  Bariatric Surgery For Obesity 1        #>  3 -1.28  -1.83  CHF                           3        #>  4 -0.915  0.179 COPD                          3        #>  5 -1.54  -0.963 CVA                           3        #>  6 -0.789 -1.75  Carotid Endarterectomy        3        #>  7  1.04   0.710 Cellulitis                    2        #>  8  1.80   0.931 Chest Pain                    2        #>  9 -1.66  -1.60  GI Hemorrhage                 3        #> 10 -0.225 -0.608 Joint Replacement             3        #> # ℹ 13 more rows #>"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"UMAP and K-Means Cluster Visualization — hai_umap_plot","title":"UMAP and K-Means Cluster Visualization — hai_umap_plot","text":"Create UMAP Projection plot.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UMAP and K-Means Cluster Visualization — hai_umap_plot","text":"","code":"hai_umap_plot(.data, .point_size = 2, .label = TRUE)  umap_plt(.data, .point_size = 2, .label = TRUE)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UMAP and K-Means Cluster Visualization — hai_umap_plot","text":".data data umap_list() function. .point_size desired size points plot. .label ggrepel::geom_label_repel() used display cluster user labels.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UMAP and K-Means Cluster Visualization — hai_umap_plot","text":"ggplot2 UMAP Projection clusters represented colors.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UMAP and K-Means Cluster Visualization — hai_umap_plot","text":"takes umap_kmeans_cluster_results_tbl umap_list() function output.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"UMAP and K-Means Cluster Visualization — hai_umap_plot","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_umap_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UMAP and K-Means Cluster Visualization — hai_umap_plot","text":"","code":"library(healthyR.data) library(dplyr) library(broom) library(ggplot2)  data_tbl <- healthyR_data %>%   filter(ip_op_flag == \"I\") %>%   filter(payer_grouping != \"Medicare B\") %>%   filter(payer_grouping != \"?\") %>%   select(service_line, payer_grouping) %>%   mutate(record = 1) %>%   as_tibble()  uit_tbl <- hai_kmeans_user_item_tbl(   .data = data_tbl,   .row_input = service_line,   .col_input = payer_grouping,   .record_input = record )  kmm_tbl <- hai_kmeans_mapped_tbl(uit_tbl)  ump_lst <- hai_umap_list(.data = uit_tbl, kmm_tbl, 3) #> New names: #> • `` -> `...1` #> • `` -> `...2` #> Joining with `by = join_by(service_line)`  hai_umap_plot(.data = ump_lst, .point_size = 3)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Function Winsorize Move — hai_winsorized_move_augment","title":"Augment Function Winsorize Move — hai_winsorized_move_augment","text":"Takes numeric vector return tibble winsorized values.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Function Winsorize Move — hai_winsorized_move_augment","text":"","code":"hai_winsorized_move_augment(.data, .value, .multiple, .names = \"auto\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Function Winsorize Move — hai_winsorized_move_augment","text":".data data passed augmented function. .value passed rlang::enquo() capture vectors want augment. .multiple positive number indicating many times zero center mean absolute deviation multiplied scaling parameter. .names default \"auto\"","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Function Winsorize Move — hai_winsorized_move_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Function Winsorize Move — hai_winsorized_move_augment","text":"Takes numeric vector return winsorized vector values moved multiple mean absolute deviation zero center vector. intent winsorization limit effect extreme values.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Function Winsorize Move — hai_winsorized_move_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Function Winsorize Move — hai_winsorized_move_augment","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 24 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  hai_winsorized_move_augment(data_tbl, a, .multiple = 3) #> # A tibble: 24 × 4 #>    date_col         a      b winsor_scale_a #>    <date>       <dbl>  <dbl>          <dbl> #>  1 2021-01-01 -1.01   0.465         -1.01   #>  2 2021-02-01  0.433  0.271          0.433  #>  3 2021-03-01  0.164  0.531          0.164  #>  4 2021-04-01 -1.51   0.110         -1.51   #>  5 2021-05-01  0.0977 0.224          0.0977 #>  6 2021-06-01 -1.80   0.148         -1.80   #>  7 2021-07-01 -1.14   0.750         -1.14   #>  8 2021-08-01  1.11   0.313          1.11   #>  9 2021-09-01 -3.16   0.0751        -3.16   #> 10 2021-10-01 -1.44   0.664         -1.44   #> # ℹ 14 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Function Winsorize Move — hai_winsorized_move_vec","title":"Vector Function Winsorize Move — hai_winsorized_move_vec","text":"Takes numeric vector return vector winsorized values.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Function Winsorize Move — hai_winsorized_move_vec","text":"","code":"hai_winsorized_move_vec(.x, .multiple = 3)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Function Winsorize Move — hai_winsorized_move_vec","text":".x numeric vector .multiple positive number indicating many times zero center mean absolute deviation multiplied scaling parameter.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Function Winsorize Move — hai_winsorized_move_vec","text":"numeric vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector Function Winsorize Move — hai_winsorized_move_vec","text":"Takes numeric vector return winsorized vector values moved multiple mean absolute deviation zero center vector. intent winsorization limit effect extreme values.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector Function Winsorize Move — hai_winsorized_move_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_move_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Function Winsorize Move — hai_winsorized_move_vec","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 25 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  vec_1 <- hai_winsorized_move_vec(data_tbl$a, .multiple = 1)  plot(data_tbl$a) lines(data_tbl$a) lines(vec_1, col = \"blue\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","title":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","text":"Takes numeric vector return tibble winsorized values.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","text":"","code":"hai_winsorized_truncate_augment(.data, .value, .fraction, .names = \"auto\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","text":".data data passed augmented function. .value passed rlang::enquo() capture vectors want augment. .fraction positive fractional 0 0.5 passed stats::quantile paramater probs. .names default \"auto\"","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","text":"augmented tibble","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_augment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","text":"Takes numeric vector return winsorized vector values truncated less greater defined fraction quantile. intent winsorization limit effect extreme values.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_augment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Function Winsorize Truncate — hai_winsorized_truncate_augment","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 24 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  hai_winsorized_truncate_augment(data_tbl, a, .fraction = 0.05) #> # A tibble: 24 × 4 #>    date_col         a      b winsor_trunc_a #>    <date>       <dbl>  <dbl>          <dbl> #>  1 2021-01-01  1.04   0.450          1.04   #>  2 2021-02-01  0.782  0.0634         0.782  #>  3 2021-03-01 -0.775  0.874         -0.775  #>  4 2021-04-01  0.775  0.159          0.775  #>  5 2021-05-01  0.0279 0.545          0.0279 #>  6 2021-06-01  0.365  0.828          0.365  #>  7 2021-07-01 -0.695  0.747         -0.695  #>  8 2021-08-01  1.99   0.515          1.57   #>  9 2021-09-01  0.298  0.129          0.298  #> 10 2021-10-01  0.455  0.806          0.455  #> # ℹ 14 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","title":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","text":"Takes numeric vector return vector winsorized values.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","text":"","code":"hai_winsorized_truncate_vec(.x, .fraction = 0.05)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","text":".x numeric vector .fraction positive fractional 0 0.5 passed stats::quantile paramater probs.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","text":"numeric vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","text":"Takes numeric vector return winsorized vector values truncated less greater defined fraction quantile. intent winsorization limit effect extreme values.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_vec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_winsorized_truncate_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector Function Winsorize Truncate — hai_winsorized_truncate_vec","text":"","code":"suppressPackageStartupMessages(library(dplyr))  len_out <- 25 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  vec_1 <- hai_winsorized_truncate_vec(data_tbl$a, .fraction = 0.05)  plot(data_tbl$a) lines(data_tbl$a) lines(vec_1, col = \"blue\")"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","title":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","text":"Automatically prep data.frame/tibble use xgboost algorithm.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","text":"","code":"hai_xgboost_data_prepper(.data, .recipe_formula)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","text":".data data passing function. Can type data accepted data parameter recipes::reciep() function. .recipe_formula formula going passed. example using diamonds data formula likely something like price ~ .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","text":"recipe object","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","text":"function automatically prep data.frame/tibble use XGBoost algorithm. function output recipe specification.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep Data for XGBoost - Recipe — hai_xgboost_data_prepper","text":"","code":"library(ggplot2)  # Regression hai_xgboost_data_prepper(.data = diamonds, .recipe_formula = price ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 9 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$where(is.character) #> • Novel factor level assignment for: recipes::all_nominal_predictors() #> • Dummy variables from: recipes::all_nominal_predictors() #> • Zero variance filter on: recipes::all_predictors() reg_obj <- hai_xgboost_data_prepper(diamonds, price ~ .) get_juiced_data(reg_obj) #> # A tibble: 53,940 × 27 #>    carat depth table     x     y     z price  cut_1  cut_2  cut_3  cut_4   cut_5 #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <int>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl> #>  1  0.23  61.5    55  3.95  3.98  2.43   326  0.359 -0.109 -0.522 -0.567 -0.315  #>  2  0.21  59.8    61  3.89  3.84  2.31   326  0.120 -0.436 -0.298  0.378  0.630  #>  3  0.23  56.9    65  4.05  4.07  2.31   327 -0.359 -0.109  0.522 -0.567  0.315  #>  4  0.29  62.4    58  4.2   4.23  2.63   334  0.120 -0.436 -0.298  0.378  0.630  #>  5  0.31  63.3    58  4.34  4.35  2.75   335 -0.359 -0.109  0.522 -0.567  0.315  #>  6  0.24  62.8    57  3.94  3.96  2.48   336 -0.120 -0.436  0.298  0.378 -0.630  #>  7  0.24  62.3    57  3.95  3.98  2.47   336 -0.120 -0.436  0.298  0.378 -0.630  #>  8  0.26  61.9    55  4.07  4.11  2.53   337 -0.120 -0.436  0.298  0.378 -0.630  #>  9  0.22  65.1    61  3.87  3.78  2.49   337 -0.598  0.546 -0.373  0.189 -0.0630 #> 10  0.23  59.4    61  4     4.05  2.39   338 -0.120 -0.436  0.298  0.378 -0.630  #> # ℹ 53,930 more rows #> # ℹ 15 more variables: color_1 <dbl>, color_2 <dbl>, color_3 <dbl>, #> #   color_4 <dbl>, color_5 <dbl>, color_6 <dbl>, color_7 <dbl>, #> #   clarity_1 <dbl>, clarity_2 <dbl>, clarity_3 <dbl>, clarity_4 <dbl>, #> #   clarity_5 <dbl>, clarity_6 <dbl>, clarity_7 <dbl>, clarity_8 <dbl>  # Classification hai_xgboost_data_prepper(Titanic, Survived ~ .) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 4 #>  #> ── Operations  #> • Factor variables from: tidyselect::vars_select_helpers$where(is.character) #> • Novel factor level assignment for: recipes::all_nominal_predictors() #> • Dummy variables from: recipes::all_nominal_predictors() #> • Zero variance filter on: recipes::all_predictors() cla_obj <- hai_xgboost_data_prepper(Titanic, Survived ~ .) get_juiced_data(cla_obj) #> # A tibble: 32 × 7 #>        n Survived Class_X2nd Class_X3rd Class_Crew Sex_Male Age_Child #>    <dbl> <fct>         <dbl>      <dbl>      <dbl>    <dbl>     <dbl> #>  1     0 No                0          0          0        1         1 #>  2     0 No                1          0          0        1         1 #>  3    35 No                0          1          0        1         1 #>  4     0 No                0          0          1        1         1 #>  5     0 No                0          0          0        0         1 #>  6     0 No                1          0          0        0         1 #>  7    17 No                0          1          0        0         1 #>  8     0 No                0          0          1        0         1 #>  9   118 No                0          0          0        1         0 #> 10   154 No                1          0          0        1         0 #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pca_your_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PCA — pca_your_recipe","title":"Perform PCA — pca_your_recipe","text":"simple function perform PCA analysis passed recipe.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pca_your_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PCA — pca_your_recipe","text":"","code":"pca_your_recipe(.recipe_object, .data, .threshold = 0.75, .top_n = 5)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pca_your_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PCA — pca_your_recipe","text":".recipe_object recipe object want pass. .data full data set used original recipe object passed .recipe_object order obtain baked data transform. .threshold number 0 1. fraction total variance covered components. .top_n many variables loadings returned per PC","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pca_your_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PCA — pca_your_recipe","text":"list object several components.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pca_your_recipe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PCA — pca_your_recipe","text":"simple wrapper around recipes functions perform PCA given recipe. function output list return invisible. components analysis returned list object can selected individually. scree plot also included. items get returned : pca_transform - pca recipe. variable_loadings variable_variance pca_estimates pca_juiced_estimates pca_baked_data pca_variance_df pca_rotattion_df pca_variance_scree_plt pca_loadings_plt pca_loadings_plotly pca_top_n_loadings_plt pca_top_n_plotly","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pca_your_recipe.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform PCA — pca_your_recipe","text":"Steven P. Sanderson II, MPH","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pca_your_recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PCA — pca_your_recipe","text":"","code":"suppressPackageStartupMessages(library(timetk)) suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(purrr)) suppressPackageStartupMessages(library(healthyR.data)) suppressPackageStartupMessages(library(rsample)) suppressPackageStartupMessages(library(recipes)) suppressPackageStartupMessages(library(ggplot2)) suppressPackageStartupMessages(library(plotly)) #> Warning: package 'plotly' was built under R version 4.2.2  data_tbl <- healthyR_data %>%   select(visit_end_date_time) %>%   summarise_by_time(     .date_var = visit_end_date_time,     .by       = \"month\",     value     = n()   ) %>%   set_names(\"date_col\", \"value\") %>%   filter_by_time(     .date_var = date_col,     .start_date = \"2013\",     .end_date = \"2020\"   ) %>%   mutate(date_col = as.Date(date_col))  splits <- initial_split(data = data_tbl, prop = 0.8)  rec_obj <- recipe(value ~ ., training(splits)) %>%   step_timeseries_signature(date_col) %>%   step_rm(matches(\"(iso$)|(xts$)|(hour)|(min)|(sec)|(am.pm)\"))  output_list <- pca_your_recipe(rec_obj, .data = data_tbl) #> Warning: Column(s) have zero variance so scaling cannot be used: `date_col_day`, `date_col_mday` and `date_col_mday7`. Consider using `step_zv()` to remove those columns before normalizing output_list$pca_variance_scree_plt  output_list$pca_loadings_plt  output_list$pca_top_n_loadings_plt"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/required_pkgs.healthyR.ai.html","id":null,"dir":"Reference","previous_headings":"","what":"Requited Packages — required_pkgs.step_hai_fourier_discrete","title":"Requited Packages — required_pkgs.step_hai_fourier_discrete","text":"Requited Packages Requited Packages Requited Packages Required Packages Required Packages Requited Packages Requited Packages","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/required_pkgs.healthyR.ai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Requited Packages — required_pkgs.step_hai_fourier_discrete","text":"","code":"required_pkgs.step_hai_fourier_discrete(x, ...)  required_pkgs.step_hai_fourier(x, ...)  required_pkgs.step_hai_hyperbolic(x, ...)  required_pkgs.step_hai_scale_zero_one(x, ...)  required_pkgs.step_hai_scale_zscore(x, ...)  required_pkgs.step_hai_winsorized_move(x, ...)  required_pkgs.step_hai_winsorized_truncate(x, ...)"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/required_pkgs.healthyR.ai.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Requited Packages — required_pkgs.step_hai_fourier_discrete","text":"x recipe step","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/required_pkgs.healthyR.ai.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Requited Packages — required_pkgs.step_hai_fourier_discrete","text":"character vector character vector character vector character vector character vector character vector character vector","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes Step Fourier Generator — step_hai_fourier","title":"Recipes Step Fourier Generator — step_hai_fourier","text":"step_hai_fourier creates specification recipe step convert numeric data either 'sin', 'cos', 'sincos' feature can aid machine learning.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes Step Fourier Generator — step_hai_fourier","text":"","code":"step_hai_fourier(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   columns = NULL,   scale_type = c(\"sin\", \"cos\", \"sincos\"),   period = 1,   order = 1,   skip = FALSE,   id = rand_id(\"hai_fourier\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recipes Step Fourier Generator — step_hai_fourier","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used create new variables. selected variables class numeric role model terms created step, analysis role assigned?. default, function assumes new variable columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. columns character string variables used inputs. field placeholder populated recipes::prep() used. scale_type character string scaling type, one \"sin\",\"cos\", \"sincos\" period number observations complete cycle order fourier term order skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recipes Step Fourier Generator — step_hai_fourier","text":"step_hai_fourier, updated version recipe new step added sequence existing steps (). Main Recipe Functions: recipes::recipe() recipes::prep() recipes::bake()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recipes Step Fourier Generator — step_hai_fourier","text":"Numeric Variables Unlike steps, step_hai_fourier remove original numeric variables. recipes::step_rm() can used purpose.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recipes Step Fourier Generator — step_hai_fourier","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  len_out <- 10 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  # Create a recipe object rec_obj <- recipe(a ~ ., data = data_tbl) %>%   step_hai_fourier(b, scale_type = \"sin\") %>%   step_hai_fourier(b, scale_type = \"cos\") %>%   step_hai_fourier(b, scale_type = \"sincos\")  # View the recipe object rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Operations  #> • Fourier Transformation on: b #> • Fourier Transformation on: b #> • Fourier Transformation on: b  # Prepare the recipe object prep(rec_obj) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Training information  #> Training data contained 10 data points and no incomplete rows. #>  #> ── Operations  #> • Fourier Transformation on: b | Trained #> • Fourier Transformation on: b | Trained #> • Fourier Transformation on: b | Trained  # Bake the recipe object - Adds the Time Series Signature bake(prep(rec_obj), data_tbl) #> # A tibble: 10 × 6 #>    date_col       b      a fourier_b_sin fourier_b_cos fourier_b_sincos #>    <date>     <dbl>  <dbl>         <dbl>         <dbl>            <dbl> #>  1 2021-01-01 0.155  0.725         0.826         0.564            0.466 #>  2 2021-02-01 0.633 -0.876        -0.741        -0.672            0.498 #>  3 2021-03-01 0.636  0.320        -0.753        -0.658            0.495 #>  4 2021-04-01 0.391 -0.865         0.632        -0.775           -0.490 #>  5 2021-05-01 0.796  0.339        -0.959         0.284           -0.272 #>  6 2021-06-01 0.376 -0.599         0.704        -0.710           -0.500 #>  7 2021-07-01 0.347  1.09          0.821        -0.570           -0.468 #>  8 2021-08-01 0.932 -1.59         -0.417         0.909           -0.379 #>  9 2021-09-01 0.664  1.42         -0.859        -0.512            0.440 #> 10 2021-10-01 0.632 -1.12         -0.738        -0.675            0.498  rec_obj %>% get_juiced_data() #> # A tibble: 10 × 6 #>    date_col       b      a fourier_b_sin fourier_b_cos fourier_b_sincos #>    <date>     <dbl>  <dbl>         <dbl>         <dbl>            <dbl> #>  1 2021-01-01 0.155  0.725         0.826         0.564            0.466 #>  2 2021-02-01 0.633 -0.876        -0.741        -0.672            0.498 #>  3 2021-03-01 0.636  0.320        -0.753        -0.658            0.495 #>  4 2021-04-01 0.391 -0.865         0.632        -0.775           -0.490 #>  5 2021-05-01 0.796  0.339        -0.959         0.284           -0.272 #>  6 2021-06-01 0.376 -0.599         0.704        -0.710           -0.500 #>  7 2021-07-01 0.347  1.09          0.821        -0.570           -0.468 #>  8 2021-08-01 0.932 -1.59         -0.417         0.909           -0.379 #>  9 2021-09-01 0.664  1.42         -0.859        -0.512            0.440 #> 10 2021-10-01 0.632 -1.12         -0.738        -0.675            0.498"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes Step Fourier Discrete Generator — step_hai_fourier_discrete","title":"Recipes Step Fourier Discrete Generator — step_hai_fourier_discrete","text":"step_hai_fourier_discrete creates specification recipe step convert numeric data either 'sin', 'cos', 'sincos' feature can aid machine learning.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes Step Fourier Discrete Generator — step_hai_fourier_discrete","text":"","code":"step_hai_fourier_discrete(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   columns = NULL,   scale_type = c(\"sin\", \"cos\", \"sincos\"),   period = 1,   order = 1,   skip = FALSE,   id = rand_id(\"hai_fourier_discrete\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recipes Step Fourier Discrete Generator — step_hai_fourier_discrete","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used create new variables. selected variables class numeric date,POSIXct role model terms created step, analysis role assigned?. default, function assumes new variable columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. columns character string variables used inputs. field placeholder populated recipes::prep() used. scale_type character string scaling type, one \"sin\",\"cos\", \"sincos\" period number observations complete cycle order fourier term order skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recipes Step Fourier Discrete Generator — step_hai_fourier_discrete","text":"step_hai_fourier_discrete, updated version recipe new step added sequence existing steps (). Main Recipe Functions: recipes::recipe() recipes::prep() recipes::bake()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier_discrete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recipes Step Fourier Discrete Generator — step_hai_fourier_discrete","text":"Numeric Variables Unlike steps, step_hai_fourier_discrete remove original numeric variables. recipes::step_rm() can used purpose.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_fourier_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recipes Step Fourier Discrete Generator — step_hai_fourier_discrete","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  len_out <- 10 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  # Create a recipe object rec_obj <- recipe(a ~ ., data = data_tbl) %>%   step_hai_fourier_discrete(b, scale_type = \"sin\") %>%   step_hai_fourier_discrete(b, scale_type = \"cos\") %>%   step_hai_fourier_discrete(b, scale_type = \"sincos\")  # View the recipe object rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Operations  #> • Fourier Discrete Transformation on: b #> • Fourier Discrete Transformation on: b #> • Fourier Discrete Transformation on: b  # Prepare the recipe object prep(rec_obj) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Training information  #> Training data contained 10 data points and no incomplete rows. #>  #> ── Operations  #> • Fourier Discrete Transformation on: b | Trained #> • Fourier Discrete Transformation on: b | Trained #> • Fourier Discrete Transformation on: b | Trained  # Bake the recipe object - Adds the Time Series Signature bake(prep(rec_obj), data_tbl) #> # A tibble: 10 × 6 #>    date_col        b       a fourier_discrete_b_sin fourier_discrete_b_cos #>    <date>      <dbl>   <dbl>                  <dbl>                  <dbl> #>  1 2021-01-01 0.0485  1.74                        1                      1 #>  2 2021-02-01 0.543   0.0260                      0                      0 #>  3 2021-03-01 0.424  -0.354                       1                      0 #>  4 2021-04-01 0.865  -0.617                       0                      1 #>  5 2021-05-01 0.493  -0.859                       1                      0 #>  6 2021-06-01 0.0304 -0.198                       1                      1 #>  7 2021-07-01 0.653  -1.65                        0                      0 #>  8 2021-08-01 0.552   1.57                        0                      0 #>  9 2021-09-01 0.745   0.576                       0                      0 #> 10 2021-10-01 0.818  -2.06                        0                      1 #> # ℹ 1 more variable: fourier_discrete_b_sincos <dbl>  rec_obj %>% get_juiced_data() #> # A tibble: 10 × 6 #>    date_col        b       a fourier_discrete_b_sin fourier_discrete_b_cos #>    <date>      <dbl>   <dbl>                  <dbl>                  <dbl> #>  1 2021-01-01 0.0485  1.74                        1                      1 #>  2 2021-02-01 0.543   0.0260                      0                      0 #>  3 2021-03-01 0.424  -0.354                       1                      0 #>  4 2021-04-01 0.865  -0.617                       0                      1 #>  5 2021-05-01 0.493  -0.859                       1                      0 #>  6 2021-06-01 0.0304 -0.198                       1                      1 #>  7 2021-07-01 0.653  -1.65                        0                      0 #>  8 2021-08-01 0.552   1.57                        0                      0 #>  9 2021-09-01 0.745   0.576                       0                      0 #> 10 2021-10-01 0.818  -2.06                        0                      1 #> # ℹ 1 more variable: fourier_discrete_b_sincos <dbl>"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_hyperbolic.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes Step Hyperbolic Generator — step_hai_hyperbolic","title":"Recipes Step Hyperbolic Generator — step_hai_hyperbolic","text":"step_hai_hyperbolic creates specification recipe step convert numeric data either 'sin', 'cos', 'tan' feature can aid machine learning.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_hyperbolic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes Step Hyperbolic Generator — step_hai_hyperbolic","text":"","code":"step_hai_hyperbolic(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   columns = NULL,   scale_type = c(\"sin\", \"cos\", \"tan\", \"sincos\"),   skip = FALSE,   id = rand_id(\"hai_hyperbolic\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_hyperbolic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recipes Step Hyperbolic Generator — step_hai_hyperbolic","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used create new variables. selected variables class numeric role model terms created step, analysis role assigned?. default, function assumes new variable columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. columns character string variables used inputs. field placeholder populated recipes::prep() used. scale_type character string scaling type, one \"sin\",\"cos\",\"tan\" \"sincos\" skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_hyperbolic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recipes Step Hyperbolic Generator — step_hai_hyperbolic","text":"step_hai_hyperbolic, updated version recipe new step added sequence existing steps (). Main Recipe Functions: recipes::recipe() recipes::prep() recipes::bake()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_hyperbolic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recipes Step Hyperbolic Generator — step_hai_hyperbolic","text":"Numeric Variables Unlike steps, step_hai_hyperbolic remove original numeric variables. recipes::step_rm() can used purpose.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_hyperbolic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recipes Step Hyperbolic Generator — step_hai_hyperbolic","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  len_out <- 10 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  # Create a recipe object rec_obj <- recipe(a ~ ., data = data_tbl) %>%   step_hai_hyperbolic(b, scale_type = \"sin\") %>%   step_hai_hyperbolic(b, scale_type = \"cos\")  # View the recipe object rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Operations  #> • Hyperbolic Transformation on: b #> • Hyperbolic Transformation on: b  # Prepare the recipe object prep(rec_obj) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Training information  #> Training data contained 10 data points and no incomplete rows. #>  #> ── Operations  #> • Hyperbolic Transformation on: b | Trained #> • Hyperbolic Transformation on: b | Trained  # Bake the recipe object - Adds the Time Series Signature bake(prep(rec_obj), data_tbl) #> # A tibble: 10 × 5 #>    date_col        b       a hyperbolic_b_sin hyperbolic_b_cos #>    <date>      <dbl>   <dbl>            <dbl>            <dbl> #>  1 2021-01-01 0.124   0.690            0.124             0.992 #>  2 2021-02-01 0.685  -1.10             0.632             0.775 #>  3 2021-03-01 0.587  -0.562            0.554             0.833 #>  4 2021-04-01 0.732  -1.30             0.668             0.744 #>  5 2021-05-01 0.906  -0.394            0.787             0.617 #>  6 2021-06-01 0.104   0.392            0.104             0.995 #>  7 2021-07-01 0.792   0.492            0.712             0.702 #>  8 2021-08-01 0.450   0.366            0.435             0.900 #>  9 2021-09-01 0.0925  1.07             0.0923            0.996 #> 10 2021-10-01 0.220  -0.0231           0.218             0.976  rec_obj %>% get_juiced_data() #> # A tibble: 10 × 5 #>    date_col        b       a hyperbolic_b_sin hyperbolic_b_cos #>    <date>      <dbl>   <dbl>            <dbl>            <dbl> #>  1 2021-01-01 0.124   0.690            0.124             0.992 #>  2 2021-02-01 0.685  -1.10             0.632             0.775 #>  3 2021-03-01 0.587  -0.562            0.554             0.833 #>  4 2021-04-01 0.732  -1.30             0.668             0.744 #>  5 2021-05-01 0.906  -0.394            0.787             0.617 #>  6 2021-06-01 0.104   0.392            0.104             0.995 #>  7 2021-07-01 0.792   0.492            0.712             0.702 #>  8 2021-08-01 0.450   0.366            0.435             0.900 #>  9 2021-09-01 0.0925  1.07             0.0923            0.996 #> 10 2021-10-01 0.220  -0.0231           0.218             0.976"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zero_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes Data Scale to Zero and One — step_hai_scale_zero_one","title":"Recipes Data Scale to Zero and One — step_hai_scale_zero_one","text":"step_hai_scale_zero_one creates specification recipe step convert numeric data time series velocity.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zero_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes Data Scale to Zero and One — step_hai_scale_zero_one","text":"","code":"step_hai_scale_zero_one(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   columns = NULL,   skip = FALSE,   id = rand_id(\"hai_scale_zero_one\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zero_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recipes Data Scale to Zero and One — step_hai_scale_zero_one","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used create new variables. selected variables class numeric role model terms created step, analysis role assigned?. default, function assumes new variable columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. columns character string variables used inputs. field placeholder populated recipes::prep() used. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zero_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recipes Data Scale to Zero and One — step_hai_scale_zero_one","text":"step_hai_scale_zero_one, updated version recipe new step added sequence existing steps (). Main Recipe Functions: recipes::recipe() recipes::prep() recipes::bake()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zero_one.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recipes Data Scale to Zero and One — step_hai_scale_zero_one","text":"Numeric Variables Unlike steps, step_hai_scale_zero_one remove original numeric variables. recipes::step_rm() can used purpose.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zero_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recipes Data Scale to Zero and One — step_hai_scale_zero_one","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  data_tbl <- data.frame(a = rnorm(200, 3, 1), b = rnorm(200, 2, 2))  # Create a recipe object rec_obj <- recipe(a ~ ., data = data_tbl) %>%   step_hai_scale_zero_one(b)  # View the recipe object rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Operations  #> • Zero-One Scale Transformation on: b  # Prepare the recipe object prep(rec_obj) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Training information  #> Training data contained 200 data points and no incomplete rows. #>  #> ── Operations  #> • Zero-One Scale Transformation on: b | Trained  # Bake the recipe object - Adds the Time Series Signature bake(prep(rec_obj), data_tbl) #> # A tibble: 200 × 3 #>         b     a hai_scale_zero_one_b #>     <dbl> <dbl>                <dbl> #>  1  3.35   1.53               0.612  #>  2  3.60   2.76               0.634  #>  3  2.73   2.67               0.553  #>  4  2.61   2.31               0.542  #>  5  4.74   2.22               0.741  #>  6 -0.543  2.90               0.247  #>  7  0.312  4.02               0.327  #>  8  1.74   2.25               0.461  #>  9  4.17   2.63               0.688  #> 10 -2.29   4.10               0.0836 #> # ℹ 190 more rows  rec_obj %>%   prep() %>%   juice() #> # A tibble: 200 × 3 #>         b     a hai_scale_zero_one_b #>     <dbl> <dbl>                <dbl> #>  1  3.35   1.53               0.612  #>  2  3.60   2.76               0.634  #>  3  2.73   2.67               0.553  #>  4  2.61   2.31               0.542  #>  5  4.74   2.22               0.741  #>  6 -0.543  2.90               0.247  #>  7  0.312  4.02               0.327  #>  8  1.74   2.25               0.461  #>  9  4.17   2.63               0.688  #> 10 -2.29   4.10               0.0836 #> # ℹ 190 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes Data Scale by Z-Score — step_hai_scale_zscore","title":"Recipes Data Scale by Z-Score — step_hai_scale_zscore","text":"step_hai_scale_zscore creates specification recipe step convert numeric data time series velocity.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes Data Scale by Z-Score — step_hai_scale_zscore","text":"","code":"step_hai_scale_zscore(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   columns = NULL,   skip = FALSE,   id = rand_id(\"hai_scale_zscore\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recipes Data Scale by Z-Score — step_hai_scale_zscore","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used create new variables. selected variables class numeric role model terms created step, analysis role assigned?. default, function assumes new variable columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. columns character string variables used inputs. field placeholder populated recipes::prep() used. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recipes Data Scale by Z-Score — step_hai_scale_zscore","text":"step_hai_scale_zscore, updated version recipe new step added sequence existing steps (). Main Recipe Functions: recipes::recipe() recipes::prep() recipes::bake()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recipes Data Scale by Z-Score — step_hai_scale_zscore","text":"Numeric Variables Unlike steps, step_hai_scale_zscore remove original numeric variables. recipes::step_rm() can used purpose.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recipes Data Scale by Z-Score — step_hai_scale_zscore","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  data_tbl <- data.frame(   a = mtcars$mpg,   b = AirPassengers %>% as.vector() %>% head(32) )  # Create a recipe object rec_obj <- recipe(a ~ ., data = data_tbl) %>%   step_hai_scale_zscore(b)  # View the recipe object rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Operations  #> • Zero-One Scale Transformation on: b  # Prepare the recipe object prep(rec_obj) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Training information  #> Training data contained 32 data points and no incomplete rows. #>  #> ── Operations  #> • Zero-One Scale Transformation on: b | Trained  # Bake the recipe object - Adds the Time Series Signature bake(prep(rec_obj), data_tbl) #> # A tibble: 32 × 3 #>        b     a hai_scale_zscore_b #>    <dbl> <dbl>              <dbl> #>  1   112  21               -1.24  #>  2   118  21               -1.00  #>  3   132  22.8             -0.444 #>  4   129  21.4             -0.564 #>  5   121  18.7             -0.884 #>  6   135  18.1             -0.325 #>  7   148  14.3              0.195 #>  8   148  24.4              0.195 #>  9   136  22.8             -0.285 #> 10   119  19.2             -0.964 #> # ℹ 22 more rows  rec_obj %>%   prep() %>%   juice() #> # A tibble: 32 × 3 #>        b     a hai_scale_zscore_b #>    <dbl> <dbl>              <dbl> #>  1   112  21               -1.24  #>  2   118  21               -1.00  #>  3   132  22.8             -0.444 #>  4   129  21.4             -0.564 #>  5   121  18.7             -0.884 #>  6   135  18.1             -0.325 #>  7   148  14.3              0.195 #>  8   148  24.4              0.195 #>  9   136  22.8             -0.285 #> 10   119  19.2             -0.964 #> # ℹ 22 more rows"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_move.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes Step Winsorized Move Generator — step_hai_winsorized_move","title":"Recipes Step Winsorized Move Generator — step_hai_winsorized_move","text":"step_hai_winsorized_move creates specification recipe step winsorize numeric data.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_move.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes Step Winsorized Move Generator — step_hai_winsorized_move","text":"","code":"step_hai_winsorized_move(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   columns = NULL,   multiple = 3,   skip = FALSE,   id = rand_id(\"hai_winsorized_move\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_move.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recipes Step Winsorized Move Generator — step_hai_winsorized_move","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used create new variables. selected variables class numeric role model terms created step, analysis role assigned?. default, function assumes new variable columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. columns character string variables used inputs. field placeholder populated recipes::prep() used. multiple positive number indicating many times zero center mean absolute deviation multiplied scaling parameter. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_move.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recipes Step Winsorized Move Generator — step_hai_winsorized_move","text":"step_hai_winsorize_move, updated version recipe new step added sequence existing steps (). Main Recipe Functions: recipes::recipe() recipes::prep() recipes::bake()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_move.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recipes Step Winsorized Move Generator — step_hai_winsorized_move","text":"Numeric Variables Unlike steps, step_hai_winsorize_move remove original numeric variables. recipes::step_rm() can used purpose.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_move.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recipes Step Winsorized Move Generator — step_hai_winsorized_move","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  len_out <- 10 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  # Create a recipe object rec_obj <- recipe(b ~ ., data = data_tbl) %>%   step_hai_winsorized_move(a, multiple = 3)  # View the recipe object rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Operations  #> • Winsorized Scaling/Move Transformation on: a  # Prepare the recipe object prep(rec_obj) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Training information  #> Training data contained 10 data points and no incomplete rows. #>  #> ── Operations  #> • Winsorized Scaling/Move Transformation on: a | Trained  # Bake the recipe object - Adds the Time Series Signature bake(prep(rec_obj), data_tbl) #> # A tibble: 10 × 4 #>    date_col         a     b winsorized_move_a #>    <date>       <dbl> <dbl>             <dbl> #>  1 2021-01-01  2.50   0.406            2.50   #>  2 2021-02-01 -1.53   0.744           -1.53   #>  3 2021-03-01  0.249  0.260            0.249  #>  4 2021-04-01  0.697  0.992            0.697  #>  5 2021-05-01  2.28   0.971            2.28   #>  6 2021-06-01  1.31   0.610            1.31   #>  7 2021-07-01  1.38   0.121            1.38   #>  8 2021-08-01  1.39   0.913            1.39   #>  9 2021-09-01  0.631  0.925            0.631  #> 10 2021-10-01 -0.0652 0.987           -0.0652  rec_obj %>% get_juiced_data() #> # A tibble: 10 × 4 #>    date_col         a     b winsorized_move_a #>    <date>       <dbl> <dbl>             <dbl> #>  1 2021-01-01  2.50   0.406            2.50   #>  2 2021-02-01 -1.53   0.744           -1.53   #>  3 2021-03-01  0.249  0.260            0.249  #>  4 2021-04-01  0.697  0.992            0.697  #>  5 2021-05-01  2.28   0.971            2.28   #>  6 2021-06-01  1.31   0.610            1.31   #>  7 2021-07-01  1.38   0.121            1.38   #>  8 2021-08-01  1.39   0.913            1.39   #>  9 2021-09-01  0.631  0.925            0.631  #> 10 2021-10-01 -0.0652 0.987           -0.0652"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"Recipes Step Winsorized Truncate Generator — step_hai_winsorized_truncate","title":"Recipes Step Winsorized Truncate Generator — step_hai_winsorized_truncate","text":"step_hai_winsorized_truncate creates specification recipe step winsorize numeric data.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recipes Step Winsorized Truncate Generator — step_hai_winsorized_truncate","text":"","code":"step_hai_winsorized_truncate(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   columns = NULL,   fraction = 0.05,   skip = FALSE,   id = rand_id(\"hai_winsorized_truncate\") )"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recipes Step Winsorized Truncate Generator — step_hai_winsorized_truncate","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables used create new variables. selected variables class numeric role model terms created step, analysis role assigned?. default, function assumes new variable columns created original variables used predictors model. trained logical indicate quantities preprocessing estimated. columns character string variables used inputs. field placeholder populated recipes::prep() used. fraction positive fractional 0 0.5 passed stats::quantile paramater probs. skip logical. step skipped recipe baked bake.recipe()? operations baked prep.recipe() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_truncate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recipes Step Winsorized Truncate Generator — step_hai_winsorized_truncate","text":"step_hai_winsorize_truncate, updated version recipe new step added sequence existing steps (). Main Recipe Functions: recipes::recipe() recipes::prep() recipes::bake()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_truncate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recipes Step Winsorized Truncate Generator — step_hai_winsorized_truncate","text":"Numeric Variables Unlike steps, step_hai_winsorize_truncate remove original numeric variables. recipes::step_rm() can used purpose.","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/reference/step_hai_winsorized_truncate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recipes Step Winsorized Truncate Generator — step_hai_winsorized_truncate","text":"","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(recipes))  len_out <- 10 by_unit <- \"month\" start_date <- as.Date(\"2021-01-01\")  data_tbl <- tibble(   date_col = seq.Date(from = start_date, length.out = len_out, by = by_unit),   a = rnorm(len_out),   b = runif(len_out) )  # Create a recipe object rec_obj <- recipe(b ~ ., data = data_tbl) %>%   step_hai_winsorized_truncate(a, fraction = 0.05)  # View the recipe object rec_obj #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Operations  #> • Winsorized Truncation Transformation on: a  # Prepare the recipe object prep(rec_obj) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 2 #>  #> ── Training information  #> Training data contained 10 data points and no incomplete rows. #>  #> ── Operations  #> • Winsorized Truncation Transformation on: a | Trained  # Bake the recipe object - Adds the Time Series Signature bake(prep(rec_obj), data_tbl) #> # A tibble: 10 × 4 #>    date_col        a      b winsorized_truncate_a #>    <date>      <dbl>  <dbl>                 <dbl> #>  1 2021-01-01 -1.10  0.650                 -1.10  #>  2 2021-02-01  1.15  0.677                  1.15  #>  3 2021-03-01  1.53  0.879                  1.36  #>  4 2021-04-01  0.767 0.760                  0.767 #>  5 2021-05-01  0.890 0.0363                 0.890 #>  6 2021-06-01 -1.20  0.670                 -1.20  #>  7 2021-07-01 -0.532 0.371                 -0.532 #>  8 2021-08-01 -1.27  0.167                 -1.24  #>  9 2021-09-01 -0.664 0.101                 -0.664 #> 10 2021-10-01 -0.374 0.908                 -0.374  rec_obj %>% get_juiced_data() #> # A tibble: 10 × 4 #>    date_col        a      b winsorized_truncate_a #>    <date>      <dbl>  <dbl>                 <dbl> #>  1 2021-01-01 -1.10  0.650                 -1.10  #>  2 2021-02-01  1.15  0.677                  1.15  #>  3 2021-03-01  1.53  0.879                  1.36  #>  4 2021-04-01  0.767 0.760                  0.767 #>  5 2021-05-01  0.890 0.0363                 0.890 #>  6 2021-06-01 -1.20  0.670                 -1.20  #>  7 2021-07-01 -0.532 0.371                 -0.532 #>  8 2021-08-01 -1.27  0.167                 -1.24  #>  9 2021-09-01 -0.664 0.101                 -0.664 #> 10 2021-10-01 -0.374 0.908                 -0.374"},{"path":"https://www.spsanderson.com/healthyR.ai/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"sym() creates symbol string syms() creates list symbols character vector. enquo() enquos() delay execution one several function arguments. enquo() returns single quoted expression, like blueprint delayed computation. enquos() returns list quoted expressions. expr() quotes new expression locally. mostly useful build new expressions around arguments captured enquo() enquos(): expr(mean(!!enquo(arg), na.rm = TRUE)). as_name() transforms quoted variable name string. Supplying something else quoted variable name error. unlike as_label() also returns single string supports kind R object input, including quoted function calls vectors. purpose summarise object single label. label often suitable default name. know quoted expression contains (instance expressions captured enquo() variable name, call function, unquoted constant), use as_label(). know quoted simple variable name, like enforce , use as_name(). learn tidy eval use tools, visit Metaprogramming section Advanced R.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/reference/tidyeval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy eval helpers — tidyeval","text":"return value, called side effects","code":""},{"path":[]},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-0013","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.13","title":"healthyR.ai 0.0.13","text":"CRAN release: 2023-04-02","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-13","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.13","text":"Fix #326 - Require R >= 3.3","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-13","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.13","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-13","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.13","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-0012","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.12","title":"healthyR.ai 0.0.12","text":"CRAN release: 2023-02-01","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-12","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.12","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-12","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.12","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-12","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.12","text":"Fix #319 - Fix .name_repair error stemming hai_umap_list() hai_umap_list() / umap_list() function. (@VladPerervenko)","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-0011","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.11","title":"healthyR.ai 0.0.11","text":"CRAN release: 2023-01-12","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-11","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.11","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-11","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.11","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-11","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.11","text":"Fix #312 - Fix typo hai_kmeans_automl() caused function fail modeling even occurred.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-0010","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.10","title":"healthyR.ai 0.0.10","text":"CRAN release: 2022-11-16","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-10","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.10","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-10","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.10","text":"Fix #303 - Export data processing functions exposed function insted internally . means longer need use healthyR.ai::: access functions.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-10","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.10","text":"1, Fix #306 - Fix failing custom recipe steps due type checks","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-009","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.9","title":"healthyR.ai 0.0.9","text":"CRAN release: 2022-10-04","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-9","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.9","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-9","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.9","text":"Fix #286 - Add function hai_umap_list() alias umap_list() helps users transition healthyR functionality name, also creating distinct functionality related healthyR.ai Fix #287 - Add function hai_umap_plot() alias umap_plt() helps Fix #286.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvments-0-0-9","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvments","title":"healthyR.ai 0.0.9","text":"Fix #289 - Add uwot package DESCRIPTION file order make umap_ functions. Fix #288 - Alias kmeans hai functions mirror healthyR api compatability. Fix #290 - Add kmeans-umap vignette.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-008","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.8","title":"healthyR.ai 0.0.8","text":"CRAN release: 2022-07-04","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-8","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.8","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-8","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.8","text":"Fix #219 - Add functions color_blind() hai_scale_color_colorblind() hai_scale_fill_colorblind() Fix #227 - Add function hai_auto_wflw_metrics() Fix #243 - Add boilerplate functions C5.0 hai_c50_data_prepper() hai_auto_c50() Fix #246 - Add boilerplate functions glmnet hai_glmnet_data_prepper() hai_auto_glmnet() Fix #249 - Add boilerplate functions cubist hai_cubist_data_prepper() hai_auto_cubist() Fix #256 - Add boilerplate functions Earth hai_earth_data_prepper() hai_auto_earth() Fix #259 - Add boilerplate functions Kernlab hai_svm_poly_data_prepper() hai_auto_svm_poly() Fix #265 - Add boilerplate functions Kernlab hai_svm_rbf_data_prepper() hai_auto_svm_rbf() Fix #269 - Add boilerplate functions ranger hai_ranger_data_prepper() hai_auto_ranger() Fix #274 - Add boilerplate functions xgboost hai_xgboost_data_prepper() hai_auto_xgboost()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-8","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.8","text":"Fix #240 - Add parameter arguments attributes list output boilerplate functions. Fix #273 - fixed bug 🐛 step_hyperbolic() tidymodels/recipes#932 PR updates healthyR.ai reflect fix. Thank @juliasilge","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-007","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.7","title":"healthyR.ai 0.0.7","text":"CRAN release: 2022-04-29","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-7","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.7","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-7","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.7","text":"Fix #209 - Add function hai_skewed_features() Fix #210 - Export current internal functions. Fix #206 - Add functions hai_scale_zscore_vec() hai_scale_zscore_augment() add step_hai_scale_zscore() Fix #207 - Add function hai_knn_data_prepper() Fix #220 - Add function hai_default_regression_metric_set() Fix #222 - Add function hai_default_classification_metric_set() Fix #205 #223 - Add function hai_auto_knn()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-7","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.7","text":"Fix #208 - Enhance hai_histogram_facet_plot() now returns list output invisible printing plot . list includes original data factored data along plot. parameter addition .scale_data set FALSE uses hai_scale_zero_one_vec() work. Fix #221 - Add yardstick (>= 0.0.8) DESCRIPTION file.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-7-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.7","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-006","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.6","title":"healthyR.ai 0.0.6","text":"CRAN release: 2022-02-27","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.6","text":"Fix #132 - Add functions: hai_kurtosis_vec() hai_skewness_vec() Fix #133 - Add function hai_distribution_comparison_tbl() Fix #138 - Add function hai_get_dist_data_tbl() Fix #140 - Add function hai_get_density_data_tbl() Fix #146 - Add function hai_density_plot() Fix #141 - Add function hai_density_qq_plot() Fix #139 - Add function hai_density_hist_plot() Fix #56 - Add function hai_histogram_facet_plot() Fix #178 - Add loadings plots pca_your_recipe() output. Added parameter .top_n get many vairable loadings want returned.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-6","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.6","text":"Fix #180 - Move cli crayon Imports Suggest due pillar importing anymore. Fix #182 - Drop need cli, crayon, rstudioapi Fix #187 - Update step print methods described tidymodels team.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-6","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.6","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-005","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.5","title":"healthyR.ai 0.0.5","text":"CRAN release: 2022-01-07","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.5","text":"Fix #118 - Add functions: hai_scale_zero_one_vec() hai_scale_zero_one_augment() step_hai_scale_zero_one() Fix #119 - Add function: hai_range_statistic()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-5","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.5","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-004","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.4","title":"healthyR.ai 0.0.4","text":"CRAN release: 2021-12-08","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-4","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.4","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-4","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.4","text":"Fix #108 - Add functions: hai_winsorized_move_vec() hai_winsorized_move_augment() step_hai_winsorized_move() Fix #107 - Add functions: hai_winsorized_truncate_vec() hai_winsorized_truncate_augment() step_hai_winsorized_truncate()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-4","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.4","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-003","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.3","title":"healthyR.ai 0.0.3","text":"CRAN release: 2021-11-23","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-3","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.3","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.3","text":"Fix #61 - Add internal function hai_data_scale() Fix #63 - Add internal function hai_data_impute() Fix #58 - Add internal function hai_data_trig(), Exported Func step_hai_hyperbolic() Fix #68 - Add hai_hyperbolic_vec() function. Fix #70 - Add hai_hyperbolic_augment() function. Fix #75 - Add hai_fourier_vec(),hai_fourier_augment(),step_hai_fourier() functions. Fix #89 - Add hai_fourier_discrete_vec(), hai_fourier_discrete_augment(), step_hai_fourier_discrete() Fix #57 - Add hai_polynomial_augment() Fix #60 - Add internal function hai_data_transform() Fix #93 - Add internal function hai_data_poly()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvments-0-0-3","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvments","title":"healthyR.ai 0.0.3","text":"Fix #81 - Add process register s3 methods work tune objects.","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-002","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.2","title":"healthyR.ai 0.0.2","text":"CRAN release: 2021-09-02","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-2","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.2","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.2","text":"Fix #22 - Add functions: hai_kmeans_mapped_tbl() hai_kmeans_obj() hai_kmeans_scree_data_tbl() hai_kmeans_scree_plt() hai_kmeans_tidy_tbl() hai_kmeans_user_item_tbl() Fix #29 - Add function pca_your_recipe() Fix #32 - Add function hai_kmeans_automl() Fix #49 - Add function hai_kmeans_automl_predict()","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvements-0-0-2","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvements","title":"healthyR.ai 0.0.2","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-001","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.1","title":"healthyR.ai 0.0.1","text":"CRAN release: 2021-08-20","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"breaking-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"healthyR.ai 0.0.1","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"healthyR.ai 0.0.1","text":"Fix #9 - Add function hai_control_chart","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"minor-fixes-and-improvments-0-0-1","dir":"Changelog","previous_headings":"","what":"Minor Fixes and Improvments","title":"healthyR.ai 0.0.1","text":"None","code":""},{"path":"https://www.spsanderson.com/healthyR.ai/news/index.html","id":"healthyrai-0009000","dir":"Changelog","previous_headings":"","what":"healthyR.ai 0.0.0.9000","title":"healthyR.ai 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
